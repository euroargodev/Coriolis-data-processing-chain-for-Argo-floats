CONF_PARAM_DEC_ID;CONF_PARAM_TYPE;CONF_PARAM_MSG_LABEL;CONF_PARAM_NAME;CONF_PARAM_DESCRIPTION
100;CONFIG_AUX;Mission description script;CONFIG_AUX_MissionDescription_STRING;The CTS5 float mission is defined by a concatenation of elementary steps (see float manual for details).
101;CONFIG_AUX;Event log level of detail;CONFIG_AUX_EventLoggerDescriptionLevel_NUMBER;Level of events stored in the associated log file ([0-3]).
102;CONFIG_AUX;Decimal and column separators for data files (*.csv);CONFIG_AUX_OutputCsvConfiguration_STRING;The CTD can be transmitted in a CSV file. The first character of this parameter defines the decimal character to use, the second character defines the column separator to use.
300;META_AUX;IP address of the float on a local connection via Bluetooth;META_AUX_FLOAT_IP_ADDRESS;IP address of the float for a bluetooth connection.
103;CONFIG_AUX;System task list: 0 – Float Integrity Test 1 – SBE41 navigation sensor 2 – Float safety mechanisms 3 – Standard navigation control 4 – Payload interaction 5 – GPS positioning 6 – Sensor acquisition 7 – NOSS navigation sensor 8 – SDA14 acoustic noise sensor 9 – Special mechanisms 10 – PUCK sensor 11 – EMAP sensor 12 – USEA interaction 13 – Under-ice capabilities;CONFIG_AUX_SystemTaskList_STRING;List of tasks considered by the float (see float manual for details).
104;CONFIG_AUX;"Enable/disable ""user"" trace files";CONFIG_AUX_EnableUserLog_LOGICAL;Enable/disable user log file generation and transmission.
105;CONFIG_AUX;"Enable/disable ""system"" trace files";CONFIG_AUX_EnableSystemLog_LOGICAL;Enable/disable system log file generation and transmission.
106;CONFIG;Enable/disable complete self-test;CONFIG_TelemetryAutoTestAtDeployment_LOGICAL;Perform a full auto-test (RUDICS server connection test) at float deployment (Yes=1/No=0).A full auto-test includes a connection test on the RUDICS server and a GPS fix acquisition.
107;CONFIG_AUX;Feedback-related risk criterion;CONFIG_AUX_FeedbackRiskLevel_NUMBER;Set the feedback risk level used to decide if a feedback, raised by the sensor board, should be accepted by the vector board (number between 0: lowest risk and 4:highest risk) (see float manual for details).
108;CONFIG_AUX;Maximum buoyancy recovery;CONFIG_AUX_EnableHeavyFloatAlarm_LOGICAL;Enable/disable heavy float alarm. Heavy float alarm should be disabled if a 'heavy float deployment' is wanted.
109;CONFIG;External pressure offset after effective surface only;CONFIG_PressureOffsetSampledAfterTransmission_LOGICAL;The surface pressure offset is sampled only if an Iridium transmission or a GPS session occured (to be sure that the pressure offset is sampled at the surface). Original proposed names was: CONFIG_SecuredPressureOffsetSampledAtSurface_LOGICAL
110;CONFIG_AUX;Time stamping format for data files (*.csv);CONFIG_AUX_OutputCsvDatetimeFormat_NUMBER;The CTD can be transmitted in a CSV file. This parameter is used to set the format of the measurement times (0: seconds elapsed since 01/01/1900, 1: Excel format, 2: Unix format, 3: Mac format).
111;CONFIG_AUX;Mandatory additional memory card for the mission;CONFIG_AUX_RequestedMemoryCard_LOGICAL;An additional memory card is requested for some missions (ex: under-ice mission). This parameter is designed to fail the autotest if the requested additional memory card is not present.
112;CONFIG;Rate of descent threshold for SV action (cm/s);CONFIG_DescentSpeedMin_cm/s;Float minimum descent speed before activating the valve.
113;CONFIG;Rate of ascent threshold for pump action (cm/s);CONFIG_AscentSpeedMin_cm/s;Float minimum ascent speed before activating the pump.
114;CONFIG;Typical rate of descent (cm/s);CONFIG_DescentSpeed_cm/s;Descent speed during downcast (can be used to estimate the time to descent from parking pressure to profile pressure)
115;CONFIG;Typical rate of ascent (cm/s);CONFIG_AscentSpeed_cm/s;ascent speed during upcast (can be used to estimate the profile duration). 
116;CONFIG;Pressure tolerance for positioning in descent (dbar);CONFIG_PressureTargetToleranceForStabilisation_dbar;Defines the target pressure interval for float stabilisation at parking or profile depth (in dbars).
117;CONFIG;Pressure tolerance for positioning in ascent (dbar);CONFIG_PressureTargetToleranceForStabilisationDuringAscent_dbar;Defines the target pressure interval for float stabilisation during ascent at a prescribed depth. The prescibed depth could be the PRES threshold to start low ascent (but I think this should not be in the definition which should stay more generic).
118;CONFIG;Pressure tolerance before repositioning in park (dbar);CONFIG_PressureTargetToleranceDuringDrift_dbar;Defines the target pressure interval for float drift at parking or profile depth (in dbars).
119;CONFIG;Pressure tolerance for positioning in park (dbar);CONFIG_PressureTargetToleranceBeforeReposition_dbar;Defines the target pressure interval before performing a buoyancy readjustment to reposition during the drift at parking depth. When a PRES measurement (sampled to monitor the float drift at parking depth) is outside the [parking_pressure +- CONFIG_PressureTargetToleranceBeforeReposition_dbar] interval, the float adjust its buoyancy.
120;CONFIG;Pressure monitoring period during descent (s);CONFIG_PressureCheckTimeDescent_seconds;Period of the pressure checks during the float descent (after CONFIG_BuoyancyReductionSecondThreshold_dbar).
121;CONFIG;Pressure monitoring period during ascent (s);CONFIG_PressureCheckTimeAscent_seconds;Period of the pressure checks during the float ascent to surface.
122;CONFIG;Pressure monitoring period during drift (s);CONFIG_PressureCheckTimeParking_seconds;Period of the pressure checks during the float drift at park or profile depth.
123;CONFIG;Maximum volume of an SV action during descent/repositioning (cm3);CONFIG_OilVolumeMaxPerValveAction_cm^3;This information is used as a threshold for the valve action durations. The valve flow is known for each float and CONFIG_OilVolumeMaxPerValveAction_cm^3 is converted to a maxDurationOfValveAction.  During descent phases the float regularly computes a valve duration to sink to the target depth. In some specific cases the result can be a huge valve action duration and the result must be thresholded by maxDurationOfValveAction.
124;CONFIG;Maximum volume of a pump action during repositioning (cm3);CONFIG_OilVolumeMaxPerPumpActionReposition_cm^3;This information is used as a threshold for the pump action duration for reposition in the parking drift interval. The pump flow is known for each float and CONFIG_OilVolumeMaxPerPumpActionReposition_cm^3 is converted to a maxDurationOfPumpActionReposition.  When a reposition should be performed, the float computes the needed pump action duration. In some specific cases the result can be a huge pump action duration and the result must be thresholded by maxDurationOfPumpActionReposition.
125;CONFIG;Emergence reduction threshold 1 (dbar);CONFIG_BuoyancyReductionFirstThreshold_dbar;First threshold of the buoyancy reduction phase (see float manual for explanations).
126;CONFIG;Emergence reduction threshold 2 (dbar);CONFIG_BuoyancyReductionSecondThreshold_dbar;Second threshold of the buoyancy reduction phase  (see float manual for explanations).
127;CONFIG;Fixed volume of a pump action during ascent (cm3);CONFIG_OilVolumePerPumpActionAscent_cm^3;Nominal oil volume of each pump action during ascent.
128;CONFIG;Fixed volume of a pump action during braking (cm3);CONFIG_OilVolumePerPumpActionDescent_cm^3;Nominal oil volume of each pump action during descent (when the float brakes because of a too fast descent speed).
129;CONFIG;SV activation time during phase 2 of emergence reduction (cs);CONFIG_ValveTimeActionBuoyancyReduction_csec;Duration of the valve actions during the second phase of the buoyancy reduction (between CONFIG_BuoyancyReductionFirstThreshold_dbar and CONFIG_BuoyancyReductionSecondThreshold_dbar).
130;CONFIG;SV activation factor during phase 2 of emergence reduction;CONFIG_ValveActionPeriodFactorBuoyancyReduction_NUMBER;Define the period of valve actions during the second phase of the buoyancy reduction (between CONFIG_BuoyancyReductionFirstThreshold_dbar and CONFIG_BuoyancyReductionSecondThreshold_dbar). The valve is open during CONFIG_ValveTimeActionBuoyancyReduction_csec each CONFIG_ValveTimeActionBuoyancyReduction_csec*CONFIG_ValveActionPeriodFactorBuoyancyReduction_NUMBER.
131;CONFIG;Fixed emergence volume (cm3);CONFIG_OilVolumeLastPumpActionBuoyancyAcquisition_cm^3;Volume of the last pump action of the buoyancy acquisition phase. Original proposed name was: CONFIG_PumpActionOilVolumeBuoyancyAcquisition_cm^3
132;CONFIG;End of ascent detection threshold (dbar);CONFIG_AscentEndThreshold_dbar;Threshold used by the float to stop ascent speed control and pump actions.
133;CONFIG;Deceleration during ascent (0 = none, 1 = low, 5 = high);CONFIG_AscentSpeedFactor_NUMBER;This factor defines the speed of the ascent phase (between 0: nominal speed and 5: lowest speed).
134;CONFIG;Braking power in ascent abortion (multiplies P15);CONFIG_ProfileEvasionBrakingFactor_NUMBER;This factor defines the oil volume transferred from the external bladder when a profile evasion occurs and the float has to brake. The transferred oil volume is CONFIG_ProfileEvasionAscentSpeedFactor_NUMBER times the oil volume of the last pump action.
197;CONFIG;Pressure tolerance before repositioning in park (dbar);CONFIG_PressureTargetToleranceDuringDriftPhase<I>_dbar;Defines the target pressure interval, during phase #<I> of multi-parking mode, for float drift at parking or profile depth (in dbars).
198;CONFIG;Pressure tolerance for positioning in park (dbar);CONFIG_PressureTargetToleranceBeforeRepositionPhase<I>_dbar;Defines the target pressure interval, during phase #<I> of multi-parking mode, before performing a buoyancy readjustment to reposition during the drift at parking depth. When a PRES measurement (sampled to monitor the float drift at parking depth) is outside the [parking_pressure +- CONFIG_PressureTargetToleranceBeforeReposition_dbar] interval, the float adjust its buoyancy.
284;CONFIG;Number of multi -parking phases;CONFIG_MultiParkingPhase_NUMBER;Number of multi-parking phases (up to 5 for Provor CTS5 floats). Do Not Use multi-parking CONFIGs if there is only a single, mono drift target throughout the life of a float. If a float has both mono-parking and multi-parking cycles, fill CONFIG_ParkPressure with fillvalue in multi-parking cycles.
135;CONFIG;Parking drift depth (dbar);CONFIG_ParkPressure_dbar;park pressure - this may change if the float is reprogrammed and must be reported in the mission configuration settings
199;CONFIG;Parking drift depth (dbar);CONFIG_ParkPressurePhase<I>_dbar;park pressure of multi-parking phase #<I> - this may change if the float is reprogrammed and must be reported in the mission configuration settings
136;CONFIG;Measurement drift depth (dbar);CONFIG_ProfilePressure_dbar;profile pressure - this may change if the float is reprogrammed and must be reported in the mission configuration settings
137;CONFIG;Pattern duration (s);CONFIG_CycleTime_seconds;For APEX and ARVOR floats this is the total duration of one cycle, usually 240 hours (10 days). For SOLO floats this is the total duration of one cycle, assuming that all float operations reach their full time-out intervals before moving to the next float stage. Typically the actual cycle time will be shorter than this value.
138;CONFIG;Time of presence at the surface;CONFIG_SurfaceTime_seconds;Time of day of float surfacing - could be hour of the float surfacing or could be stored as seconds when set as hh:mm:ss (e.g. for PROVOR CTS5)
139;CONFIG;Enable/disable GPS position acquisition;CONFIG_GPSAcquisitionEndCycle_LOGICAL;The float performs a GPS session to acquire a GPS fix at the end of the cycle (Yes=1/No=0).
140;CONFIG;Enable/disable transmission session;CONFIG_TransmissionEndCycle_LOGICAL;The float performs a telemetry transmission at the end of the cycle (Yes=1/No=0).
200;CONFIG;Parking durations (s);CONFIG_ParkDurationPhase<I>_seconds;Duration of the park phase #<I> in multi-parking mode
141;CONFIG_AUX;Low battery voltage detection threshold (V);CONFIG_AUX_LowBatteryNoLoadAlarmThreshold_volts;"Min threshold of battery level before raising a ""low battery no load"" alarm."
142;CONFIG_AUX;High internal pressure detection threshold (mbar);CONFIG_AUX_HighInternalPressureAlarmThreshold_mbar;"Max threshold of internal pressure level before raising a ""high internal pressure"" alarm."
143;CONFIG_AUX;Detection threshold for inconsistent external pressure jumps (cm/s);CONFIG_AUX_HighAccelerationAlarmThreshold_cm/s;"Max threshold of vertical speed level before raising a ""External pressure sensor failure"" alarm."
144;CONFIG_AUX;Low external pressure detection threshold (dbar);CONFIG_AUX_LowExternalPressureAlarmThreshold_dbar;"Min threshold of external pressure before raising a ""Low external pressure"" alarm."
145;CONFIG_AUX;Detection threshold for high external pressure / pressure limit (dbar);CONFIG_AUX_HighExternalPressureAlarmThreshold_dbar;"Max threshold of external pressure before raising a ""High external pressure"" alarm."
146;CONFIG_AUX;Detection of broken external pressure sensor (successive errors);CONFIG_AUX_MaxExternalPressureErrorAlarmThreshold_NUMBER;"Max number of successive errors from the external pressure sensor before raising a ""External pressure sensor failure"" alarm."
147;CONFIG;Detection threshold for grounding during descent (cm3);CONFIG_OilVolumeMinForGroundingDetection_cm^3;This information is a threshold used to detect a grounding of the float. If there is no vertical motion after having tranferred CONFIG_OilVolumeMinForGroundingDetection_cm^3 through the valve, the gounded flag is activated and the float acts as configurated by the CONFIG_GroundingMode_LOGICAL parameter.So, yes it is a configuration parameter (and I can easily understand that it can be modified via remote control since some PROVOR floats have experienced erroneous grounding detection (under study but perhaps due to in-situ conditions).
148;CONFIG_AUX;Detection threshold for snagging during ascent (cm3);CONFIG_AUX_OilVolumeMinForHangingDetection_cm^3;This information is a threshold used to detect a hanging of the float. If there is no ascent vertical motion after having tranferred CONFIG_OilVolumeMinForHangingDetection_cm^3 through the pump the hanged alarm is activated.
149;CONFIG_AUX;Detection of high rate of descent (braking);CONFIG_AUX_HighDescentSpeedAlarmThreshold_cm/s;"Max threshold of descent speed before raising a ""braking"" alarm."
150;CONFIG_AUX;Low battery voltage detection threshold (min. on pump) (V);CONFIG_AUX_LowBatteryLoadAlarmThreshold_volts;"Min threshold of battery level before raising a ""low battery load"" alarm."
151;CONFIG_AUX;"Delay time at surface ""SA"" stage before loop (s)";CONFIG_AUX_SurfaceTimeDelayBeforeLoop_seconds;Surface temporization (step 'SA' of the mission) before loops ([0-86400 (24 h)]) (see float manual for details).
152;CONFIG_AUX;"Delay time at surface ""SA"" stage in ""pattern"" loop (s)";CONFIG_AUX_SurfaceTimeDelayInPatternLoop_seconds;Surface temporization (step 'SA' of the mission) during pattern loops ([0-7200 (2 h)]) (see float manual for details).
153;CONFIG_AUX;"Delay time at surface ""SA"" stage in ""cycle"" loop (s)";CONFIG_AUX_SurfaceTimeDelayInCycleLoop_seconds;Surface temporization (step 'SA' of the mission) during cycle loops ([0-7200 (2 h)]) (see float manual for details).
154;CONFIG_AUX;"Delay time for test (""TC"" stage) (s)";CONFIG_AUX_TestTimeDelay_seconds;Test temporization (step 'TC' of the mission) ([0-600 (10 min)]) (see float manual for details).
155;CONFIG;Enable/disable GPS position acquisition at end of life;CONFIG_GPSAcquisitionEndOfLife_LOGICAL;The float performs a GPS session to acquire a GPS fix in each End Of Life transmission (Yes=1/No=0).
156;CONFIG;Transmission period at end of life (s);CONFIG_TransmissionPeriodEndOfLife_seconds;Period of the Iridium transmission when in End Of Life mode (in minutes).
157;CONFIG_AUX;List of alarms that can cause end of life (alarms 18 and 19 cannot be modified);CONFIG_AUX_EndOfLifeEvent_STRING;List of alarms which can make the float transitioning to the End Of Life mode.
158;CONFIG;Management method for grounding detection during descent parking;CONFIG_GroundingMode_NUMBER;Action performed by the float when a grounding is detected. 0: the float changes its drift pressure, 1: the float stays on the seabed until the next phase of the cycle. For PROVOR CTS5 the number assigned to each mode has changed - see float manual for details for this model.
159;CONFIG;Set point offset in case of grounding management by correction (dbar);CONFIG_GroundingModePresAdjustment_dbar;If in grounding mode 0, the float changes its drift pressure to its programmed one minus this value only if its current pressure is greater than this value.
160;CONFIG;Detection management method for snagging during ascent;CONFIG_HangingMode_NUMBER;Action performed by the float when a hanging is detected (see float manual for details). [JP additional comments on behaviour for PROVOR floats: The hanging mode is the same idea as the grounding mode but for an ascent phase. When the float detects a too low vertical motion after having activated its pump to try to ascend it enters in a hanging mode (it is probably stuck at the sea floor). This parameter configures (with the same idea as CONFIG_GroundingMode_NUMBER for grounding) what should be the actions to perform to try to escape from hanging (it can activate its pump and valve alternatively to try to escape or abandon the ascent and switch to the next scheduled task].
161;CONFIG;Minimum pressure for correction in case of grounding detection;CONFIG_GroundingModeMinPresThreshold_dbar;If in grounding mode 0, the float changes its drift pressure only if its current pressure is greater than this value.
241;CONFIG_AUX;Management method for grounding detection during descent profile;CONFIG_AUX_GroundingModeForProfileDepth_NUMBER;Action performed by the float when a grounding is detected during descent to profile depth. For PROVOR CTS5 floats: 2: the float stays on the seabed until the ascent start time, 3: the ascent starts immediately.
162;CONFIG;"Depth for ""slow"" start of ascent (dbar)";CONFIG_AscentSpeedStartPressureThresholdForSlowPhase_dbar;Pressure threshold to start the slow ascent speed phase.
249;CONFIG;Enable/disable surface acquisition;CONFIG_InAirMeasurementPeriodicity_NUMBER;"Cycle periodicity of the ""in air measurement"" phase: - 0 means no ""in air acquisition"" - 1 means ""in air acquisition"" every cycle - N means ""in air acquisition"" one cycle every ""N"" cycles"
250;CONFIG;Acquisition duration (s);CONFIG_InAirMeasurementTime_seconds;"Duration of the ""in air measurement"" phase."
274;CONFIG;"Depth for ""slow"" start of ascent (dbar)";CONFIG_AscentSpeedStartPressureThresholdForSlowPhase_dbar;Pressure threshold to start the slow ascent speed phase.
275;CONFIG;Depth for execution of ice detection test (dbar);CONFIG_IceDetectionAcousticStartPressureThreshold_dbar;Pressure threshold to start the acoustic ice detection test. 
276;CONFIG;Duration of ice detection test;CONFIG_IceDetectionTestDuration_minutes;Duration of the ice detection test.
262;CONFIG;"Depth for ""slow"" start of ascent (dbar)";CONFIG_AscentSpeedStartPressureThresholdForSlowPhase_dbar;Pressure threshold to start the slow ascent speed phase.
263;CONFIG_AUX;Maximum duration period without trying a transmission session (s);CONFIG_AUX_IceDetectionMaxMonthNoTransmission_NUMBER;Maximum delay (in month) of no transmission due to the ice detection algorithm. This parameter is used to disable the ice detection algorithmand force the float to surface even if ice is detected.
264;CONFIG_AUX;Systematic abort profile period after ISA detection (s);CONFIG_AUX_IceDetectionSpringInhibitionDelaySinceLastIsaDetection_days;Maximum delay (in days) since the last ice evasion date due to an ISA detection.  This is often called the 'Spring', where the float stays underwater for a time even though the temperature has warmed.
265;CONFIG_AUX;Systematic abort profile period after collision or cover detection (s);CONFIG_AUX_IceDetectionSpringInhibitionDelaySinceLastSurfaceIceCapDetection_days;Maximum delay (in days) since the last ice evasion date due to a surface Ice cap detection.
266;CONFIG;Collection starting depth (dbar);CONFIG_IceDetectionMixedLayerPMax_dbar;Maximum sampling pressure used by ice cover detection algorithm. i.e. start pressure threshold for ice detection algorithm)
267;CONFIG;Collection stopping depth (dbar);CONFIG_IceDetectionMixedLayerPMin_dbar;Minimum sampling pressure used by ice cover detection algorithm. (i..e end pressure threshold for ice detection algorithm)
268;CONFIG;Median temperature threshold (°C);CONFIG_IceDetection_degC;Ice temperature in [degree Celsius/1e3] where profiles are aborted because of ice formation conditions
269;CONFIG;Successive detections counter threshold;CONFIG_IceDetectionConsecutiveDetectionBeforeFloatSurfaceInhibition_NUMBER;Number of consecutive ISA detections before float surface inhibition.If fewer consecutive ice detections are made, then the float will immediately seek the surface if mixed layer temp is warm.
301;META_AUX;DNIS number associated with the SIM card;META_AUX_FLOAT_DNIS_NUMBER;DNIS number of the SIM card of the float.
302;META;Login of account associated with float (on the server);META_PTT;Transmission identifier of the float.
303;META_AUX;Serial port number;META_AUX_IRIDIUM_SERIAL_PORT_NUMBER;Serial port number used by the Iridium device.
166;CONFIG;Maximum duration of Iridium session (s);CONFIG_ConnectionTimeOut_seconds;Connection time-out, i.e. maximum transmission period for one telemetry session
167;CONFIG_AUX;Block size for file segmentation;CONFIG_AUX_TransmittedFileMaxSize_kbyte;Max size for transmitted files (in kbyte). Larger files are split before transmission.
168;CONFIG_AUX;Measurement file format (*.csv, *.hex extended, *.hex standard);CONFIG_AUX_CtdDataFormat_NUMBER;Format of the transmitted CTD data (0: CSV format, 1: extended hex format, 2: standard hex format) (see float manual for details).
169;CONFIG_AUX;File transmission mode (standard, extended, high speed);CONFIG_AUX_FileTransmissionMode_NUMBER;File transmission mode (0: standard, 1: extended, 2: streaming).
277;CONFIG_AUX;Iridium registration maximum time before abort (s);CONFIG_AUX_IridiumRegistrationTimeOut_seconds;Iridium registration time-out (used to abort an Iridium session before CONFIG_ConnectionTimeOut_second).
304;META_AUX;Mechanics identification;META_AUX_HYDRAULIC_ENGINE_TYPE;Reference of the hydraulic device.
170;CONFIG_AUX;Total oil volume in the hydraulic system (cm3);CONFIG_AUX_TotalOilVolume_cm^3;Total volume of oil in the hydraulic device.
305;META_AUX;Serial port number;META_AUX_SENSOR_BOARD_SERIAL_PORT_NUMBER;Serial port number used by the sensor board.
306;META_AUX;Power output number;META_AUX_SENSOR_BOARD_POWER_OUTPUT_PORT_NUMBER;Power output port number used by the sensor board.
171;CONFIG_AUX;"Enable/disable ""$ADJUST"" message";CONFIG_AUX_InformSensorBoardDuringHydraulicAction_LOGICAL;Ask/inform the sensor board during hydraulic adjustments.
172;CONFIG_AUX;Enable/disable complete self-test;CONFIG_AUX_FullAutotest_LOGICAL;Perform a full autotest.
310;META_AUX;Serial port number;META_AUX_EMAP_SERIAL_PORT_NUMBER;Serial port number used by the EMAP (USEA controller board).
311;META_AUX;Power output number;META_AUX_EMAP_POWER_OUTPUT_PORT_NUMBER;Power output port number used by the EMAP (USEA controller board).
312;META_AUX;USEA’s sensor list: 2  -> DO 3  -> OCR 4  -> ECO 5  -> SBEPH 6  -> CROVER 7  -> SUNA 8  -> UVP6 12 -> ECOv2 13 -> EXTTRIG 14 -> RAMSES 15 -> OPUS 17 -> MPE 18 – HYDROC 20 – IMU 21 – RAMSES-2;META_AUX_USEA_SENSOR_LIST_STRING;List of sensors managed by the USEA card (2:DO, 3:OCR, 4:ECO, 5:SBEPH, 6:CROVER, 7:SUNA, 8:UVP6, 12:ECOv2, 13:ExtTrig, 14:RAMSES, 15:OPUS, 17:MPE, 18:HYDROC, 20:IMU, 21:RAMSES-2).
307;META_AUX;Serial port number;META_AUX_GPS_SERIAL_PORT_NUMBER;Serial port number used by the GPS device.
308;META_AUX;Power output number;META_AUX_GPS_POWER_OUTPUT_PORT_NUMBER;Power output port number used by the GPS device.
173;CONFIG;Enable/disable PPS synchronisation (external module);CONFIG_GPSSetClockSensorCard_LOGICAL;When the float Real Time Clock is set, also set the clock of the measurement card.
174;CONFIG;Enable/disable enhanced positioning (altitude 0m);CONFIG_GPSImprovedLocation_LOGICAL;Use the GPS improved location mode. This mode can be used when the float altitude is 0 meter, it provides better locations.
242;CONFIG_AUX;Enable/disable system clock synchronization;CONFIG_AUX_GPSSetRTC_LOGICAL;Set the float Real Time Clock with GPS time.
175;CONFIG;Zone 1 - Sampling period / descent to drift depth (s);CONFIG_<short_sensor_name>DescentToParkPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the descent to parking pressure in the depth zone #<N> (in seconds).
1175;CONFIG_AUX;Zone 1 - Sampling period / descent to drift depth (s);CONFIG_AUX_<short_sensor_name>DescentToParkPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the descent to parking pressure in the depth zone #<N> (in seconds).
176;CONFIG;Zone 1 - Sampling period / parking depth drift (s);CONFIG_<short_sensor_name>ParkDriftPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the drift at parking pressure in the depth zone #<N>.
1176;CONFIG_AUX;Zone 1 - Sampling period / parking depth drift (s);CONFIG_AUX_<short_sensor_name>ParkDriftPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the drift at parking pressure in the depth zone #<N>.
177;CONFIG;Zone 1 - Sampling period / descent to measurement depth (s);CONFIG_<short_sensor_name>DescentToProfPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the descent to profile pressure in the depth zone #<N> (in seconds).
1177;CONFIG_AUX;Zone 1 - Sampling period / descent to measurement depth (s);CONFIG_AUX_<short_sensor_name>DescentToProfPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the descent to profile pressure in the depth zone #<N> (in seconds).
178;CONFIG;Zone 1 - Sampling period / measurement depth drift (s);CONFIG_<short_sensor_name>ProfDriftPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the drift at profile pressure in the depth zone #<N>.
1178;CONFIG_AUX;Zone 1 - Sampling period / measurement depth drift (s);CONFIG_AUX_<short_sensor_name>ProfDriftPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the drift at profile pressure in the depth zone #<N>.
179;CONFIG;Zone 1 - Sampling period / ascent (s);CONFIG_<short_sensor_name>AscentPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the ascending profile in the depth zone #<N> (in seconds).
1179;CONFIG_AUX;Zone 1 - Sampling period / ascent (s);CONFIG_AUX_<short_sensor_name>AscentPhaseDepthZone<N>SamplingPeriod_seconds;Sampling period of the <short_sensor_name> during the ascending profile in the depth zone #<N> (in seconds).
180;CONFIG;Zone 1 – Acquisition type;CONFIG_<short_sensor_name>DepthZone<N>PowerAcquisitionMode_NUMBER;Power acquisition mode of the <short_sensor_name> in the depth zone #<N> (0 : none, 2 : pulsed, 3 : continuous).
1180;CONFIG_AUX;Zone 1 – Acquisition type;CONFIG_AUX_<short_sensor_name>DepthZone<N>PowerAcquisitionMode_NUMBER;Power acquisition mode of the <short_sensor_name> in the depth zone #<N> (0 : none, 2 : pulsed, 3 : continuous).
181;CONFIG;Zone 1 – Processing type;CONFIG_<short_sensor_name>DepthZone<N>DataProcessingMode_NUMBER;Data processing output of the <short_sensor_name> in the depth zone #<N>  (see float manual for details).
1181;CONFIG_AUX;Zone 1 – Processing type;CONFIG_AUX_<short_sensor_name>DepthZone<N>DataProcessingMode_NUMBER;Data processing output of the <short_sensor_name> in the depth zone #<N>  (see float manual for details).
182;CONFIG;Zone 1 – Synchronisation type;CONFIG_<short_sensor_name>DepthZone<N>DataSynchronizationMode_NUMBER;Data of the <short_sensor_name> can be reported as they have been sampled or synchronized with one CTD parameter (PRES or TEMP or PSAL). The synchronization is done with the timely closest sample of the CTD (see float manual for details).
1182;CONFIG_AUX;Zone 1 – Synchronisation type;CONFIG_AUX_<short_sensor_name>DepthZone<N>DataSynchronizationMode_NUMBER;Data of the <short_sensor_name> can be reported as they have been sampled or synchronized with one CTD parameter (PRES or TEMP or PSAL). The synchronization is done with the timely closest sample of the CTD (see float manual for details).
183;CONFIG;Zone 1 – Section depth;CONFIG_<short_sensor_name>DepthZone<N>SlicesThickness_dbar;Slices thickness for <short_sensor_name> in the depth zone #<N> (in dbar).
1183;CONFIG_AUX;Zone 1 – Section depth;CONFIG_AUX_<short_sensor_name>DepthZone<N>SlicesThickness_dbar;Slices thickness for <short_sensor_name> in the depth zone #<N> (in dbar).
184;CONFIG;Pressure threshold between zones 1 and 2;CONFIG_<short_sensor_name>DepthZone<N>DepthZone<N+1>PressureThreshold_dbar;Threshold between depth zone #N and depth zone #N+1 for <short_sensor_name>  (in dbar).
1184;CONFIG_AUX;Pressure threshold between zones 1 and 2;CONFIG_AUX_<short_sensor_name>DepthZone<N>DepthZone<N+1>PressureThreshold_dbar;Threshold between depth zone #N and depth zone #N+1 for <short_sensor_name>  (in dbar).
185;CONFIG;Sensor warm-up time (ms);CONFIG_<short_sensor_name>WarmUpTime_msec;Time, needed after the <short_sensor_name> is powered ON, to provide its first sample (in milli-seconds).
1185;CONFIG_AUX;Sensor warm-up time (ms);CONFIG_AUX_<short_sensor_name>WarmUpTime_msec;Time, needed after the <short_sensor_name> is powered ON, to provide its first sample (in milli-seconds).
186;CONFIG;Sensor shut down time (ms);CONFIG_<short_sensor_name>PowerSwitchDelayMin_msec;Minimum waiting time needed by the <short_sensor_name> between a switch OFF and a switch ON (in milli-seconds).
1186;CONFIG_AUX;Sensor shut down time (ms);CONFIG_AUX_<short_sensor_name>PowerSwitchDelayMin_msec;Minimum waiting time needed by the <short_sensor_name> between a switch OFF and a switch ON (in milli-seconds).
187;CONFIG;Filtering index of first valid sample;CONFIG_<short_sensor_name>FirstValidSample_NUMBER;Rank of the first valid sample provided by the <short_sensor_name> (0 is the rank of the first sample).
1187;CONFIG_AUX;Filtering index of first valid sample;CONFIG_AUX_<short_sensor_name>FirstValidSample_NUMBER;Rank of the first valid sample provided by the <short_sensor_name> (0 is the rank of the first sample).
251;CONFIG;Surface - Sampling period / in-air measurements (s);CONFIG_<short_sensor_name>InAirMeasurementSamplingPeriod_seconds;"Sampling period for the <short_sensor_name> sensor during the ""in air measurement"" phase."
1251;CONFIG_AUX;Surface - Sampling period / in-air measurements (s);CONFIG_AUX_<short_sensor_name>InAirMeasurementSamplingPeriod_seconds;"Sampling period for the <short_sensor_name> sensor during the ""in air measurement"" phase."
188;CONFIG;Pression de « cut-off » (dbar);CONFIG_CTDPumpStopPressure_dbar;The pressure at which the CTD pump is switched off.  As the float ascends, the code looks at the pressure and if <= CONFIG_CTDPumpStopPressure, the CTD is turned off. CTDPumpStopPressure is a firmware threshold and as such, data may continue to be collected for a limited span after the threshold is recognized. Especially in floats that return high resolution discrete data, there might be data collected shallower than the cut off, due to the discrete nature of the pressure data and also due to the time necessary for the firmware to turn off the CTD once the pressure threshold is reached. For example for SOLOII floats the CTD is switched off at 1dbar, and typically the shallowest data is from 0.5 to 0.8 dbar. This shallow data should be carefully assessed for its validity.
243;CONFIG_AUX;Enable/disable fast sampling period (1 Hz);CONFIG_AUX_CTDFastSampling_LOGICAL;Configure CTD to 1 Hz sampling instead of 0.5 Hz usual one.
252;CONFIG_AUX;Zone 1 - Configuration file;CONFIG_AUX_UvpDepthZone<N>Configuration_NUMBER;Number of  the UVP sensor configuration for the DepthZone<N>. The configuration is defined by UVP_ACQ_CONF_XX_PARAMETERS, where XX is the configuration number.
253;CONFIG_AUX;Parking depth drift - Configuration file;CONFIG_AUX_UvpParkDriftPhaseConfiguration_NUMBER;Number of  the UVP sensor configuration for the park drift phase. The configuration is defined by UVP_ACQ_CONF_XX_PARAMETERS, where XX is the configuration number.
254;CONFIG_AUX;Parking depth drift – Image count for average;CONFIG_AUX_UvpParkDriftPhaseNumberAveragedImages_NUMBER;Number of averaged images by the UVP sensor for the park drift phase.
255;CONFIG_AUX;Parking depth drift – Sampling period (s);CONFIG_AUX_UvpParkDriftPhaseSamplingPeriod_seconds;Sampling period of the UVP during the park drift phase (in seconds).
271;CONFIG_AUX;Spectrum pixel begin;CONFIG_AUX_RamsesAccOutputPixelBegin_NUMBER;Pixel start: index of the first wavelength transmitted in full resolution. The size of the transmitted RAMSES spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
272;CONFIG_AUX;Spectrum pixel end;CONFIG_AUX_RamsesAccOutputPixelEnd_NUMBER;Pixel end: index of the last wavelength transmitted in binned resolution. The size of the transmitted RAMSES spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
273;CONFIG_AUX;Spectrum binning;CONFIG_AUX_RamsesAccOutputBinningSize_NUMBER;Binning size: number of wavelengths averaged in binned resolution subset of the spectrum. The size of the transmitted RAMSES spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
256;CONFIG_AUX;Spectrum pixel begin;CONFIG_AUX_OpusOutputPixelBegin_NUMBER;Pixel start: index of the first wavelength transmitted in full resolution. The size of the transmitted OPUS spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
257;CONFIG_AUX;Spectrum pixel pivot;CONFIG_AUX_OpusOutputPixePivot_NUMBER;Pixel pivot: index of the last wavelength transmitted in full resolution. The binned resolution subset starts at Pixel pivot+1. The size of the transmitted OPUS spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
258;CONFIG_AUX;Spectrum pixel end;CONFIG_AUX_OpusOutputPixelEnd_NUMBER;Pixel end: index of the last wavelength transmitted in binned resolution. The size of the transmitted OPUS spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
259;CONFIG_AUX;Spectrum binning;CONFIG_AUX_OpusOutputBinningSize_NUMBER;Binning size: number of wavelengths averaged in binned resolution subset of the spectrum. The size of the transmitted OPUS spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
260;CONFIG_AUX;Zone 1 - Acquisition mode;CONFIG_AUX_OpusDepthZone<N>AcquisitionMode_NUMBER;OPUS acquisition mode can either be 'calibrated' (configuration value = 2) or 'raw' (configuration value = 4) during descent or ascent phases. In 'calibrated' mode, Light spectra are corrected for Dark and Sensor Temperature onboard the OPUS and recorded as 'calibrated' LGT spectra. In 'raw' mode, raw Light spectra are recorded as 'raw' LGT spectra. In 'raw' mode, Dark spectra are taken separately and recorded as BLK with mean and standard deviation between Pixel Start and Pixel Pivot. During Parking and Surface phases, light spectra are recorded in 'raw' mode.
261;CONFIG_AUX;Zone 1 - Dark subsampling;CONFIG_AUX_OpusDepthZone<N>DarkSubsampling_NUMBER;During descent and ascent phases, in case of 'raw' light spectrum acquisition mode, an additional raw dark spectrum is acquired automatically with successive spectrum acquisitions. The measurement interval 'DarkSubsampling' is selected by the user independently for each zone. 0 means no raw dark spectrum BLK is acquired. 1-200 means a raw dark spectrum BLK is acquired every 1 to 200 LGT spectrum acquisitions. During Parking and Surface phases, a raw dark spectrum is acquired before each raw light spectrum acquisition.
278;CONFIG_AUX;Warm-up time (s);CONFIG_AUX_HydrocWarmUpTime_seconds;Duration of the sensor Warm-up phase
279;CONFIG_AUX;Zero time (s);CONFIG_AUX_HydrocZeroTime_seconds;Duration of the sensor Zero phase
280;CONFIG_AUX;Flush time (s);CONFIG_AUX_HydrocFlushTime_seconds;Duration of the sensor Flush phase
281;CONFIG_AUX;Warm-up filter (s);CONFIG_AUX_HydrocWarmUpFilter_seconds;Data bin duration over which data during Warm-up phase are averaged
282;CONFIG_AUX;Zero filter (s);CONFIG_AUX_HydrocZeroFilter_seconds;Data bin duration over which data during Zero phase are averaged
283;CONFIG_AUX;Flush filter (s);CONFIG_AUX_HydrocFlushFilter_seconds;Data bin duration over which data during Flush phase are averaged
201;CONFIG_AUX;Spectrum pixel begin;CONFIG_AUX_RamsesArcOutputPixelBegin_NUMBER;Pixel start: index of the first wavelength transmitted in full resolution. The size of the transmitted RAMSES spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
202;CONFIG_AUX;Spectrum pixel end;CONFIG_AUX_RamsesArcOutputPixelEnd_NUMBER;Pixel end: index of the last wavelength transmitted in binned resolution. The size of the transmitted RAMSES spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
203;CONFIG_AUX;Spectrum binning;CONFIG_AUX_RamsesArcOutputBinningSize_NUMBER;Binning size: number of wavelengths averaged in binned resolution subset of the spectrum. The size of the transmitted RAMSES spectrum can be adapted by the user according to his need. It is possible to select the transmitted spectrum and also to extend it with a binned resolution subset for higher wavelengths.
244;CONFIG_AUX;Enable/disable sub-surface duration optimization;CONFIG_AUX_ReduceSubSurfacePhase_LOGICAL;If there is no need to reach the surface (cycle with no transmission phase), the float can start a new descent phase as soon as the 2 dbar thresold is reached (instead of waiting 10 minutes after the crossing of the CONFIG_AscentEndThreshold_dbar threshold).
245;CONFIG_AUX;Enable/disable sub-surface brake action;CONFIG_AUX_BrakeAtSubSurface_LOGICAL;If there is no need to reach the surface (cycle with no transmission phase), the float can brake after the crossing of the CONFIG_AscentEndThreshold_dbar threshold and start a new descent phase.
246;CONFIG_AUX;Enable/disable the pressure activation;CONFIG_AUX_PressureActivation_LOGICAL;Use the pressure activation feature.
247;CONFIG;Pressure threshold for mission activation (dbar);CONFIG_PressureActivation_dbar;depth at which float is set to pressure activate
248;CONFIG_AUX;Maximum duration of the pressure test (s);CONFIG_AUX_PressureActivationTimeout_seconds;The pressure activation phase starts after the first successfull auto-test and ends (with the start of the float mission) at the end of the CONFIG_AUX_PressureActivationTimeout_seconds period. During this phase the float checks the external pressure and can start its mission as soon as a CONFIG_PressureActivation_dbar pressure is measured.
189;CONFIG_AUX;first calibration point raw value;CONFIG_AUX_BatteryValueFirstCalibrationPoint_COUNT;Count to volt conversion for battery measurements: counts measurement for the first calibration point.
190;CONFIG_AUX;second calibration point raw value;CONFIG_AUX_BatteryValueSecondCalibrationPoint_COUNT;Count to volt conversion for battery measurements: counts measurement for the second calibration point.
191;CONFIG_AUX;first calibration point physical value;CONFIG_AUX_BatteryValueFirstCalibrationPoint_volts;Count to volt conversion for battery measurements: volts measurement for the first calibration point.
192;CONFIG_AUX;second calibration point physical value;CONFIG_AUX_BatteryValueSecondCalibrationPoint_volts;Count to volt conversion for battery measurements: volts measurement for the second calibration point.
193;CONFIG_AUX;first calibration point raw value;CONFIG_AUX_InternalPressureValueFirstCalibrationPoint_COUNT;Count to mbar conversion for internal pressure measurements: counts measurement for the first calibration point.
194;CONFIG_AUX;second calibration point raw value;CONFIG_AUX_InternalPressureValueSecondCalibrationPoint_COUNT;Count to mbar conversion for internal pressure measurements: counts measurement for the second calibration point.
195;CONFIG_AUX;first calibration point physical value;CONFIG_AUX_InternalPressureValueFirstCalibrationPoint_mbar;Count to mbar conversion for internal pressure measurements: mbar measurement for the first calibration point.
196;CONFIG_AUX;second calibration point physical value;CONFIG_AUX_InternalPressureValueSecondCalibrationPoint_mbar;Count to mbar conversion for internal pressure measurements: mbar measurement for the second calibration point.
309;META_AUX;serial port number;META_AUX_CTD_SERIAL_PORT_NUMBER;Serial port number used by the CTD sensor.
313;META_AUX;serial port number;META_AUX_DO_SERIAL_PORT_NUMBER;Serial port number used by the DO sensor.
314;META_AUX;serial port number;META_AUX_OCR_SERIAL_PORT_NUMBER;Serial port number used by the OCR sensor.
315;META_AUX;serial port number;META_AUX_ECO_SERIAL_PORT_NUMBER;Serial port number used by the ECO sensor.
330;META_AUX;serial port number;META_AUX_SFET_SERIAL_PORT_NUMBER;Serial port number used by the SFET sensor.
331;META_AUX;serial port number;META_AUX_CROVER_SERIAL_PORT_NUMBER;Serial port number used by the CROVER sensor.
332;META_AUX;serial port number;META_AUX_SUNA_SERIAL_PORT_NUMBER;Serial port number used by the SUNA sensor.
316;META_AUX;serial port number;META_AUX_UVP_SERIAL_PORT_NUMBER;Serial port number used by the UVP sensor.
333;META_AUX;serial port number;META_AUX_OPUS_SERIAL_PORT_NUMBER;Serial port number used by the OPUS sensor.
339;META_AUX;serial port number;META_AUX_RAMSES_SERIAL_PORT_NUMBER;Serial port number used by the RAMSES sensor.
340;META_AUX;serial port number;META_AUX_MPE_SERIAL_PORT_NUMBER;Serial port number used by the MPE sensor.
350;META_AUX;serial port number;META_AUX_HYDROC_SERIAL_PORT_NUMBER;Serial port number used by the HYDROC sensor.
354;CONFIG_AUX;Orientation mode (0= horizontal, 1=vertical);CONFIG_AUX_ImuOrientationMode_NUMBER;Orientation mode of the IMU sensor (0= horizontal, 1=vertical).
355;CONFIG_AUX;Acquisition mode (0=raw, 1=tilt+heading);CONFIG_AUX_ImuAcquisitionMode_NUMBER;Acquisition mode of the IMU sensor (0=raw, 1=tilt+heading).
317;META_AUX;CID=xxxxxxxxxxxx;META_AUX_FLOAT_SIM_CARD_NUMBER;SIM card number of the float.
318;META_AUX;Firmware=xxxxxxxxxxxx;META_AUX_FIRMWARE_VERSION_SECONDARY;Firmware version of secondary controller board.
319;META_AUX;HW_CONF;META_AUX_UVP_HW_CONF_PARAMETERS;Camera_ref, Acquisition_mode, Default_acquisition_configuration, Delay_after_power_up_on_time_mode, Light_ref, Correction_table_activation, Time_between_lighting_trigger_and_acquisition, Pressure_sensor_ref, Pressure_offset, Storage_capacity, Minimum_remaining_memory_for_thumbnail_saving, Baud_Rate, Black_level, Shutter, Gain, Threshold, Aa, Exp, Pixel_Size, Image_volume, Calibration_date, Last_parameters_modification, Operator_email, Min_esd_class_01 - Min_esd_class_18
356;META_AUX;ACQ_CONF_0;META_AUX_UVP_ACQ_CONF_0_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
320;META_AUX;ACQ_CONF_1;META_AUX_UVP_ACQ_CONF_1_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
321;META_AUX;ACQ_CONF_2;META_AUX_UVP_ACQ_CONF_2_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
322;META_AUX;ACQ_CONF_3;META_AUX_UVP_ACQ_CONF_3_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
323;META_AUX;ACQ_CONF_4;META_AUX_UVP_ACQ_CONF_4_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
324;META_AUX;ACQ_CONF_5;META_AUX_UVP_ACQ_CONF_5_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
325;META_AUX;ACQ_CONF_6;META_AUX_UVP_ACQ_CONF_6_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
326;META_AUX;ACQ_CONF_7;META_AUX_UVP_ACQ_CONF_7_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
327;META_AUX;ACQ_CONF_8;META_AUX_UVP_ACQ_CONF_8_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
328;META_AUX;ACQ_CONF_9;META_AUX_UVP_ACQ_CONF_9_PARAMETERS;Configuration_name, PT_mode, Acquisition_frequency, Frames_per_bloc, Pressure_for_auto_start, Pressure_difference_for_auto_stop, Result_sending, Save_synthetic_data_for_delayed_request, Save_images, Vignetting_lower_limit_size, Appendices_ratio, Interval_for_measuring_background_noise, Image_nb_for_smoothing, Analog_output_activation, Gain_for_analog_out, Maximal_internal_temperature, Operator_email, Taxo_conf, Remaining_memory
357;META_AUX;TAXO_CONF_0;META_AUX_UVP_TAXO_CONF_0_PARAMETERS;Configuration_name, Model_reference, Max_size_for_classification, Model_nb_classes, Taxo_ID_for_class_00 - Taxo_ID_for_class_39
358;META_AUX;TAXO_CONF_1;META_AUX_UVP_TAXO_CONF_1_PARAMETERS;Configuration_name, Model_reference, Max_size_for_classification, Model_nb_classes, Taxo_ID_for_class_00 - Taxo_ID_for_class_39
334;META_AUX;"OPUS_BOARD Firmware=""1.3.21""";META_AUX_OPUS_FIRMWARE_VERSION;Firmware version of the OPUS sensor
335;META_AUX;"SENSOR_LAMP SN=""EPA_0516""";META_AUX_OPUS_SENSOR_LAMP_SERIAL_NO;Serial number of the OPUS sensor lamp module
336;META_AUX;"WATERBASE Length=""255""";META_AUX_OPUS_WATERBASE_LENGTH;Length of the OPUS Lamp spectrum
337;META_AUX;WATERBASE Intensities;META_AUX_OPUS_WATERBASE_INTENSITIES;Intensities of the OPUS Lamp spectrum
341;META_AUX;"ACQUISITION Average=""123""";META_AUX_MPE_ACQUISITION_AVERAGE;The number of internal optical sensor measurements that are averaged to generate a reported data point from the MPE optical sensor.
342;META_AUX;"ACQUISITION Rate=""125""";META_AUX_MPE_ACQUISITION_RATE;The rate in Hz at which the internal optical sensor is making measurements. The Rate parameter combined with the Average parameter sets the effective output rate of reported data points from the MPE sensor (If Average = 123, and Rate = 125, then MPE output rate is approximately 1Hz).
343;META_AUX;"PHOTODETECTOR ResponsivityW=""4070032.92441368""";META_AUX_MPE_PHOTODETECTOR_RESPONSIVITY_W;The responsivity in raw MPE output per calibrated units for the optical sensor in Water.  To calibrate data collected in water, divide the MPE optical sensor output by ResponsivityW.
344;META_AUX;"PHOTODETECTOR ResponsivityA=""43244.7994747""";META_AUX_MPE_PHOTODETECTOR_RESPONSIVITY_A;The responsivity in raw MPE output per calibrated units for the optical sensor in Air. To calibrate data collected in air, divide the MPE optical sensor output by ResponsivityA.
345;META_AUX;"MICRORADIOMETER GainHM=""216.309""";META_AUX_MPE_MICRORADIOMETER_GAIN_HM;The ratio of gains between the High and Medium stages of the MPE optical sensor electronics. For data traceability only. Not necessary for data processing. 
346;META_AUX;"MICRORADIOMETER GainML=""198.2457""";META_AUX_MPE_MICRORADIOMETER_GAIN_ML;The ratio of gains between the Medium and Low stages of the MPE optical sensor electronics. For data traceability only. Not necessary for data processing. 
347;META_AUX;"MICRORADIOMETER OffsetH=""8388446""";META_AUX_MPE_MICRORADIOMETER_OFFSET_H;The High gain stage offset internally applied in the MPE optical sensor electronics. For data traceability only. Not necessary for data processing.
348;META_AUX;"MICRORADIOMETER OffsetM=""8388609""";META_AUX_MPE_MICRORADIOMETER_OFFSET_M;The Medium gain stage offset internally applied in the MPE optical sensor electronics. For data traceability only. Not necessary for data processing.
349;META_AUX;"MICRORADIOMETER OffsetL=""8388610""";META_AUX_MPE_MICRORADIOMETER_OFFSET_L;The Low gain stage offset internally applied in the MPE optical sensor electronics. For data traceability only. Not necessary for data processing.
351;META_AUX;"SENSOR SN=""CO2T-0821-004""";META_AUX_HYDROC_SERIAL_NO;Serial number of the HYDROC sensor.
352;META_AUX;"HYDROC_BOARD Firmware=""20130911""";META_AUX_HYDROC_FIRMWARE_VERSION;Firmware version of the HYDROC sensor.
353;META_AUX;"HYDROC_BOARD Hardware=""2018042401""";META_AUX_HYDROC_HARDWARE_VERSION;Hardware version of the HYDROC sensor.
359;META_AUX;"BATTERY_PACK1_TYPE = ""Lithium"" ";META_AUX_BATTERY_PACK1_TYPE;Type of the battery pack #1.
360;META_AUX;"BATTERY_PACK1_VOLTAGE = ""10.8 V"" ";META_AUX_BATTERY_PACK1_VOLTAGE;Voltage of the battery pack #1.
361;META_AUX;"BATTERY_PACK1_CAPACITY = ""208 Ah"" ";META_AUX_BATTERY_PACK1_CAPACITY;Capacity of the battery pack #1.
362;META_AUX;"BATTERY_PACK2_TYPE = ""Lithium"" ";META_AUX_BATTERY_PACK2_TYPE;Type of the battery pack #2.
363;META_AUX;"BATTERY_PACK2_VOLTAGE = ""10.8 V"" ";META_AUX_BATTERY_PACK2_VOLTAGE;Voltage of the battery pack #2.
364;META_AUX;"BATTERY_PACK2_CAPACITY = ""208 Ah"" ";META_AUX_BATTERY_PACK2_CAPACITY;Capacity of the battery pack #2.
365;META_AUX;"CROVER_PATH_LENGTH = ""25.00""";META_AUX_CROVER_PATH_LENGTH;CROVER path length in cm.
366;META_AUX;"CROVER_CALIBRATION = ""12855""";META_AUX_CROVER_CALIBRATION_VALUE;CROVER CSC calibration value.
367;META_AUX;"RAMSES_BOARD_FIRMWARE = ""1.0.9""";META_AUX_RAMSES_ACC_FIRMWARE_VERSION;Firmware version of the RAMSES_ACC sensor.
368;META_AUX;"RAMSES_SPECTRUM_LENGTH = ""255""";META_AUX_RAMSES_ACC_SPECTRUM_LENGTH;RAMSES_ACC spectrum length.
369;META_AUX;"RAMSES_SPECTRUM_WAVELENGTHS = ""xxx""";META_AUX_RAMSES_ACC_SPECTRUM_WAVELENGTHS;RAMSES_ACC spectrum wavelengths.
370;META_AUX;"RAMSES2_BOARD_FIRMWARE = ""1.0.9""";META_AUX_RAMSES_ARC_FIRMWARE_VERSION;Firmware version of the RAMSES_ARC sensor.
371;META_AUX;"RAMSES2_SPECTRUM_LENGTH = ""255""";META_AUX_RAMSES_ARC_SPECTRUM_LENGTH;RAMSES_ARC spectrum length.
372;META_AUX;"RAMSES2_SPECTRUM_WAVELENGTHS = ""xxx""";META_AUX_RAMSES_ARC_SPECTRUM_WAVELENGTHS;RAMSES_ARC spectrum wavelengths.
373;META_AUX;"IMU_SENSOR_ORIENTATION = ""1""";META_AUX_IMU_ORIENTATION;IMU orientation.
374;META_AUX;"IMU_SENSOR_MODE = ""1""";META_AUX_IMU_MODE;IMU mode.
375;META_AUX;"IMU_TEMPERATURE_T0 = ""0""";META_AUX_IMU_TEMPERATURE_COR_OFFSET;IMU temperature correction offset.
376;META_AUX;"IMU_ACCELEROMETER_AXO = ""0""";META_AUX_IMU_ACCELEROMETER_X_COR_OFFSET;IMU accelerometer X correction offset.
377;META_AUX;"IMU_ACCELEROMETER_AYO = ""0""";META_AUX_IMU_ACCELEROMETER_Y_COR_OFFSET;IMU accelerometer Y correction offset.
378;META_AUX;"IMU_ACCELEROMETER_AZO = ""0""";META_AUX_IMU_ACCELEROMETER_Z_COR_OFFSET;IMU accelerometer Z correction offset.
380;META_AUX;"IMU_ACCELEROMETER_AXG = ""0""";META_AUX_IMU_ACCELEROMETER_X_COR_GAIN;IMU accelerometer X correction gain.
381;META_AUX;"IMU_ACCELEROMETER_AYG = ""0""";META_AUX_IMU_ACCELEROMETER_Y_COR_GAIN;IMU accelerometer Y correction gain.
382;META_AUX;"IMU_ACCELEROMETER_AZG = ""0""";META_AUX_IMU_ACCELEROMETER_Z_COR_GAIN;IMU accelerometer Z correction gain.
383;META_AUX;"IMU_GYROSCOPE_GXO = ""0""";META_AUX_IMU_GYROSCOPE_X_COR_OFFSET;IMU gyroscope X correction offset.
384;META_AUX;"IMU_GYROSCOPE_GYO = ""0""";META_AUX_IMU_GYROSCOPE_Y_COR_OFFSET;IMU gyroscope Y correction offset.
385;META_AUX;"IMU_GYROSCOPE_GZO = ""0""";META_AUX_IMU_GYROSCOPE_Z_COR_OFFSET;IMU gyroscope Z correction offset.
386;META_AUX;"IMU_MAGNETOMETER_MXO = ""0""";META_AUX_IMU_MAGNETOMETER_X_COR_OFFSET;IMU magnetometer X correction offset.
387;META_AUX;"IMU_MAGNETOMETER_MYO = ""0""";META_AUX_IMU_MAGNETOMETER_Y_COR_OFFSET;IMU magnetometer Y correction offset.
388;META_AUX;"IMU_MAGNETOMETER_MZO = ""0""";META_AUX_IMU_MAGNETOMETER_Z_COR_OFFSET;IMU magnetometer Z correction offset.
389;META_AUX;"IMU_COMPASS_HI1 = ""-2029""";META_AUX_IMU_COMPASS_HARD_IRON_COR_OFFSET1;IMU compass hard-iron correction offset.
390;META_AUX;"IMU_COMPASS_HI2 = ""-1075""";META_AUX_IMU_COMPASS_HARD_IRON_COR_OFFSET2;IMU compass hard-iron correction offset.
391;META_AUX;"IMU_COMPASS_SI11 = ""1.00000""";META_AUX_IMU_COMPASS_SOFT_IRON_COR_MATRIX11;IMU compass soft-iron correction matrix.
392;META_AUX;"IMU_COMPASS_SI12 = ""0.00084""";META_AUX_IMU_COMPASS_SOFT_IRON_COR_MATRIX12;IMU compass soft-iron correction matrix.
393;META_AUX;"IMU_COMPASS_SI21 = ""-0.00089""";META_AUX_IMU_COMPASS_SOFT_IRON_COR_MATRIX21;IMU compass soft-iron correction matrix.
394;META_AUX;"IMU_COMPASS_SI22 = ""1.05756""";META_AUX_IMU_COMPASS_SOFT_IRON_COR_MATRIX22;IMU compass soft-iron correction matrix.
395;META_AUX;"SBE41_BOARD_FIRMWARE = ""7.2.5""";META_AUX_SBE41_FIRMWARE_VERSION;Firmware version of the SBE41 sensor.
407;META_AUX;"SUNA_BOARD_FIRMWARE = ""2.2.13""";META_AUX_SUNA_FIRMWARE_VERSION;Firmware version of the SUNA sensor
408;META_AUX;"SUNA_SPECTROMETER_SPINTPER = ""200""";META_AUX_SUNA_SPECTROMETER_INTEGRATION_TIME;SUNA spectrometer integration time.
116003;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_SunaApfFrameOutputPixelBegin_NUMBER;The Apf frame definition allows for a variable number of spectrometer pixels (also called channels) to be included in the frame. The two pixel values are configured indirectly via the wavelength range of the spectrum to be output (Suna Hardware Manual, section 4.2.3, input/output configuration parameters, data wavelength low/high.) The firmware converts the wavelength values to spectrometer pixels.
116004;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_SunaApfFrameOutputPixelEnd_NUMBER;The Apf frame definition allows for a variable number of spectrometer pixels (also called channels) to be included in the frame. The two pixel values are configured indirectly via the wavelength range of the spectrum to be output (Suna Hardware Manual, section 4.2.3, input/output configuration parameters, data wavelength low/high.) The firmware converts the wavelength values to spectrometer pixels.
113002;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoBetaAngle_angularDeg;Angle of Beta measurements  (in degrees) 
133011;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoBetaBandwidth1_nm;Bandwidth of EcoBeta  #1measurements (in nanometer).
133010;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoBetaWavelength1_nm;Wavelength of Eco Beta  #1 measurements (in nanometer).
123103;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoCdomFluorescenceEmissionBandwidth_nm;Bandwidth of Eco for emission of Cdom fluorescence measurements (in nanometer)
123101;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoCdomFluorescenceEmissionWavelength_nm;Wavelength of Eco for emission of Cdom fluorescence measurements (in nanometer)
123102;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoCdomFluorescenceExcitationBandwidth_nm;Bandwidth of Eco for excitation of Cdom fluorescence measurements (in nanometer)
123100;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoCdomFluorescenceExcitationWavelength_nm;Wavelength of Eco for excitation of Cdom fluorescence measurements (in nanometer)
123003;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoChlaFluorescenceEmissionBandwidth_nm;Bandwidth of Eco for emission of Chla fluorescence measurements (in nanometer)
123001;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoChlaFluorescenceEmissionWavelength_nm;Wavelength of Eco for emission of Chla fluorescence measurements (in nanometer)
123002;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoChlaFluorescenceExcitationBandwidth_nm;Bandwidth of Eco for excitation of Chla fluorescence measurements (in nanometer)
123000;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoChlaFluorescenceExcitationWavelength_nm;Wavelength of Eco for excitation of Chla fluorescence measurements (in nanometer)
113000;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_EcoVerticalPressureOffset_dbar;vertical pressure offset due to the fact that the sensor is not exactly at the Ctd pressure
132013;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OcrDownIrrBandwidth1_nm;Bandwidth of Ocr DownIrr #1 measurements (in nanometer).
132023;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OcrDownIrrBandwidth2_nm;Bandwidth of Ocr DownIrr #2 measurements (in nanometer).
132033;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OcrDownIrrBandwidth3_nm;Bandwidth of Ocr DownIrr #3 measurements (in nanometer).
132012;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OcrDownIrrWavelength1_nm;Wavelength of Ocr DownIrr #1measurements (in nanometer).
132022;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OcrDownIrrWavelength2_nm;Wavelength of Ocr DownIrr #2 measurements (in nanometer).
132032;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OcrDownIrrWavelength3_nm;Wavelength of Ocr DownIrr #3 measurements (in nanometer).
112000;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OcrVerticalPressureOffset_dbar;vertical pressure offset due to the fact that the sensor is not exactly at the Ctd pressure
111000;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OptodeVerticalPressureOffset_dbar;vertical pressure offset due to the fact that the sensor is not exactly at the Ctd pressure
111007;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OptodeMeasurementsInAir_LOGICAL;Sensors can be mounted on a stick to perform measurements in Air. Values: Yes = 1, No = 0
111008;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_OptodeTimePressureOffset_seconds;Time interval between  optode and pressure measurements due to the fact that the optode answer is not simultaneous with the CTD/pressure answer
116000;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_SunaVerticalPressureOffset_dbar;vertical pressure offset due to the fact that the sensor is not exactly at the Ctd pressure
116005;CONFIG;Payload sensor miscellaneous static configuration parameter;CONFIG_SunaWithScoop_LOGICAL;Suna with scoop which redirects flow through Suna optics
