% ------------------------------------------------------------------------------
% Get Argo attributes for a given parameter.
%
% SYNTAX :
%  [o_attributeStruct] = get_netcdf_param_attributes_3_1(a_paramName)
%
% INPUT PARAMETERS :
%   a_paramName : parameter name
%
% OUTPUT PARAMETERS :
%   o_attributeStruct : parameter associated attributes
%
% EXAMPLES :
%
% SEE ALSO :
% AUTHORS  : Jean-Philippe Rannou (Altran)(jean-philippe.rannou@altran.com)
% ------------------------------------------------------------------------------
% RELEASES :
%   04/30/2014 - RNU - creation
% ------------------------------------------------------------------------------
function [o_attributeStruct] = get_netcdf_param_attributes_3_1(a_paramName)

% output parameters initialization
o_attributeStruct = [];


paramName = a_paramName;
again = 1;
while (again ~= 0)
   
   switch (paramName)
      
      case 'JULD'
         o_attributeStruct = struct('name', 'JULD', ...
            'longName', 'Julian day (UTC) of each measurement relative to REFERENCE_DATE_TIME', ...
            'standardName', 'time', ...
            'units', 'days since 1950-01-01 00:00:00 UTC', ...
            'conventions', 'Relative julian days with decimal part (as parts of day)', ...
            'fillValue', double(999999), ...
            'axis', 'T', ...
            'paramType', '', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);
         
      case 'LATITUDE'
         o_attributeStruct = struct('name', 'LATITUDE', ...
            'longName', 'Latitude of each location', ...
            'standardName', 'latitude', ...
            'units', 'degree_north', ...
            'fillValue', double(99999), ...
            'validMin', double(-90), ...
            'validMax', double(90), ...
            'axis', 'Y', ...
            'paramType', '', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);
         
      case 'LONGITUDE'
         o_attributeStruct = struct('name', 'LONGITUDE', ...
            'longName', 'Longitude of each location', ...
            'standardName', 'longitude', ...
            'units', 'degree_east', ...
            'fillValue', double(99999), ...
            'validMin', double(-180), ...
            'validMax', double(180), ...
            'axis', 'X', ...
            'paramType', '', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);
         
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         % C PARAMETERS
         
      case 'CNDC'
         o_attributeStruct = struct('name', 'CNDC', ...
            'longName', 'Electrical conductivity', ...
            'standardName', 'sea_water_electrical_conductivity', ...
            'fillValue', single(99999), ...
            'units', 'mhos/m', ...
            'validMin', single(0), ...
            'validMax', single(8.5), ...
            'axis', '', ...
            'cFormat', '%10.4f', ...
            'fortranFormat', 'F10.4', ...
            'resolution', single(0.0001), ...
            'paramType', 'c', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'PRES'
         o_attributeStruct = struct('name', 'PRES', ...
            'longName', 'Sea water pressure, equals 0 at sea-level', ...
            'standardName', 'sea_water_pressure', ...
            'fillValue', single(99999), ...
            'units', 'decibar', ...
            'validMin', single(0), ...
            'validMax', single(12000), ...
            'axis', 'Z', ...
            'cFormat', '%7.1f', ...
            'fortranFormat', 'F7.1', ...
            'resolution', single(0.1), ...
            'paramType', 'c', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'PSAL'
         o_attributeStruct = struct('name', 'PSAL', ...
            'longName', 'Practical salinity', ...
            'standardName', 'sea_water_salinity', ...
            'fillValue', single(99999), ...
            'units', 'psu', ...
            'validMin', single(2), ...
            'validMax', single(41), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'c', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'TEMP'
         o_attributeStruct = struct('name', 'TEMP', ...
            'longName', 'Sea temperature in-situ ITS-90 scale', ...
            'standardName', 'sea_water_temperature', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', single(-2.5), ...
            'validMax', single(40), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'c', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         % B PARAMETERS
         
      case 'DOXY'
         o_attributeStruct = struct('name', 'DOXY', ...
            'longName', 'Dissolved oxygen', ...
            'standardName', 'moles_of_oxygen_per_unit_mass_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'micromole/kg', ...
            'validMin', single(-5), ...
            'validMax', single(600), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'BBP470' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'BBP470', ...
            'longName', 'Particle backscattering at 470 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'm-1', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'BBP532'
         o_attributeStruct = struct('name', 'BBP532', ...
            'longName', 'Particle backscattering at 532 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'm-1', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'BBP700'
         o_attributeStruct = struct('name', 'BBP700', ...
            'longName', 'Particle backscattering at 700 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'm-1', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);

      case 'TURBIDITY'
         o_attributeStruct = struct('name', 'TURBIDITY', ...
            'longName', 'Sea water turbidity', ...
            'standardName', 'sea_water_turbidity', ...
            'fillValue', single(99999), ...
            'units', 'ntu', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'CP660'
         o_attributeStruct = struct('name', 'CP660', ...
            'longName', 'Particle beam attenuation at 660 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'm-1', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'CP660_STD'
         o_attributeStruct = struct('name', 'CP660_STD', ...
            'longName', 'Standard deviation of particle beam attenuation at 660 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'm-1', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'CP660_MED'
         o_attributeStruct = struct('name', 'CP660_MED', ...
            'longName', 'Median value of particle beam attenuation at 660 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'm-1', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'CHLA'
         o_attributeStruct = struct('name', 'CHLA', ...
            'longName', 'Chlorophyll-A', ...
            'standardName', 'mass_concentration_of_chlorophyll_a_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'mg/m3', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.025), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'CDOM'
         o_attributeStruct = struct('name', 'CDOM', ...
            'longName', 'Concentration of coloured dissolved organic matter in sea water', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'ppb', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'NITRATE'
         o_attributeStruct = struct('name', 'NITRATE', ...
            'longName', 'Nitrate', ...
            'standardName', 'moles_of_nitrate_per_unit_mass_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'micromole/kg', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.2f', ...
            'fortranFormat', 'F.2', ...
            'resolution', single(0.01), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'BISULFIDE'
         o_attributeStruct = struct('name', 'BISULFIDE', ...
            'longName', 'Bisulfide', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'micromole/kg', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'PH_IN_SITU_TOTAL'
         o_attributeStruct = struct('name', 'PH_IN_SITU_TOTAL', ...
            'longName', 'pH', ...
            'standardName', 'sea_water_ph_reported_on_total_scale', ...
            'fillValue', single(99999), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.4f', ...
            'fortranFormat', 'F.4', ...
            'resolution', single(0.0001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'DOWN_IRRADIANCE380'
         o_attributeStruct = struct('name', 'DOWN_IRRADIANCE380', ...
            'longName', 'Downwelling irradiance at 380 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.6f', ...
            'fortranFormat', 'F.6', ...
            'resolution', single(0.000001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'DOWN_IRRADIANCE412'
         o_attributeStruct = struct('name', 'DOWN_IRRADIANCE412', ...
            'longName', 'Downwelling irradiance at 412 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.6f', ...
            'fortranFormat', 'F.6', ...
            'resolution', single(0.000001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'DOWN_IRRADIANCE443' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'DOWN_IRRADIANCE443', ...
            'longName', 'Downwelling irradiance at 443 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.6f', ...
            'fortranFormat', 'F.6', ...
            'resolution', single(0.000001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'DOWN_IRRADIANCE490'
         o_attributeStruct = struct('name', 'DOWN_IRRADIANCE490', ...
            'longName', 'Downwelling irradiance at 490 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.6f', ...
            'fortranFormat', 'F.6', ...
            'resolution', single(0.000001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);

      case 'DOWN_IRRADIANCE555' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'DOWN_IRRADIANCE555', ...
            'longName', 'Downwelling irradiance at 555 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.6f', ...
            'fortranFormat', 'F.6', ...
            'resolution', single(0.000001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'UP_RADIANCE412' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'UP_RADIANCE412', ...
            'longName', 'Upwelling radiance at 412 nanometers', ...
            'standardName', 'upwelling_radiance_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm/sr', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'UP_RADIANCE443' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'UP_RADIANCE443', ...
            'longName', 'Upwelling radiance at 443 nanometers', ...
            'standardName', 'upwelling_radiance_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm/sr', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'UP_RADIANCE490' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'UP_RADIANCE490', ...
            'longName', 'Upwelling radiance at 490 nanometers', ...
            'standardName', 'upwelling_radiance_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm/sr', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'UP_RADIANCE555' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'UP_RADIANCE555', ...
            'longName', 'Upwelling radiance at 555 nanometers', ...
            'standardName', 'upwelling_radiance_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'W/m^2/nm/sr', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'DOWNWELLING_PAR'
         o_attributeStruct = struct('name', 'DOWNWELLING_PAR', ...
            'longName', 'Downwelling photosynthetic available radiation', ...
            'standardName', 'downwelling_photosynthetic_photon_flux_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'microMoleQuanta/m^2/sec', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'b', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         % I PARAMETERS
         
      case 'PRES_MED'
         o_attributeStruct = struct('name', 'PRES_MED', ...
            'longName', 'Median value of sea water pressure, equals 0 at sea-level', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'decibar', ...
            'validMin', single(0), ...
            'validMax', single(12000), ...
            'axis', '', ...
            'cFormat', '%7.1f', ...
            'fortranFormat', 'F7.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_STD'
         o_attributeStruct = struct('name', 'TEMP_STD', ...
            'longName', 'Standard deviation of sea temperature in-situ ITS-90 scale', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', single(-2.5), ...
            'validMax', single(40), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_MED'
         o_attributeStruct = struct('name', 'TEMP_MED', ...
            'longName', 'Median value of sea temperature in-situ ITS-90 scale', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', single(-2.5), ...
            'validMax', single(40), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'PSAL_STD'
         o_attributeStruct = struct('name', 'PSAL_STD', ...
            'longName', 'Standard deviation of practical salinity', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'psu', ...
            'validMin', single(2), ...
            'validMax', single(41), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'PSAL_MED'
         o_attributeStruct = struct('name', 'PSAL_MED', ...
            'longName', 'Median value of practical salinity', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'psu', ...
            'validMin', single(2), ...
            'validMax', single(41), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_DOXY'
         o_attributeStruct = struct('name', 'TEMP_DOXY', ...
            'longName', 'Sea temperature from oxygen sensor ITS-90 scale', ...
            'standardName', 'temperature_of_sensor_for_oxygen_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', single(-2.0), ...
            'validMax', single(40), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_DOXY_STD'
         o_attributeStruct = struct('name', 'TEMP_DOXY_STD', ...
            'longName', 'Standard deviation of sea temperature from oxygen sensor ITS-90 scale', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', single(-2.0), ...
            'validMax', single(40), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_DOXY_MED'
         o_attributeStruct = struct('name', 'TEMP_DOXY_MED', ...
            'longName', 'Median value of sea temperature from oxygen sensor ITS-90 scale', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', single(-2.0), ...
            'validMax', single(40), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_VOLTAGE_DOXY' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'TEMP_VOLTAGE_DOXY', ...
            'longName', 'Thermistor voltage reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%5.2f', ...
            'fortranFormat', 'F5.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'VOLTAGE_DOXY'
         o_attributeStruct = struct('name', 'VOLTAGE_DOXY', ...
            'longName', 'Voltage reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', single(0), ...
            'validMax', single(100), ...
            'axis', '', ...
            'cFormat', '%5.2f', ...
            'fortranFormat', 'F5.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FREQUENCY_DOXY'
         o_attributeStruct = struct('name', 'FREQUENCY_DOXY', ...
            'longName', 'Frequency reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'hertz', ...
            'validMin', single(0), ...
            'validMax', single(25000), ...
            'axis', '', ...
            'cFormat', '%7.1f', ...
            'fortranFormat', 'F7.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'COUNT_DOXY'
         o_attributeStruct = struct('name', 'COUNT_DOXY', ...
            'longName', 'Count reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%5.2f', ...
            'fortranFormat', 'F5.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BPHASE_DOXY'
         o_attributeStruct = struct('name', 'BPHASE_DOXY', ...
            'longName', 'Uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(10), ...
            'validMax', single(70), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'DPHASE_DOXY'
         o_attributeStruct = struct('name', 'DPHASE_DOXY', ...
            'longName', 'Calibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(10), ...
            'validMax', single(70), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TPHASE_DOXY'
         o_attributeStruct = struct('name', 'TPHASE_DOXY', ...
            'longName', 'Uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(10), ...
            'validMax', single(70), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'C1PHASE_DOXY'
         o_attributeStruct = struct('name', 'C1PHASE_DOXY', ...
            'longName', 'Uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(10), ...
            'validMax', single(70), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'C1PHASE_DOXY_STD'
         o_attributeStruct = struct('name', 'C1PHASE_DOXY_STD', ...
            'longName', 'Standard deviation of uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(10), ...
            'validMax', single(70), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'C1PHASE_DOXY_MED'
         o_attributeStruct = struct('name', 'C1PHASE_DOXY_MED', ...
            'longName', 'Median value of uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(10), ...
            'validMax', single(70), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'C2PHASE_DOXY'
         o_attributeStruct = struct('name', 'C2PHASE_DOXY', ...
            'longName', 'Uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(0), ...
            'validMax', single(15), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'C2PHASE_DOXY_STD'
         o_attributeStruct = struct('name', 'C2PHASE_DOXY_STD', ...
            'longName', 'Standard deviation of uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(0), ...
            'validMax', single(15), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'C2PHASE_DOXY_MED'
         o_attributeStruct = struct('name', 'C2PHASE_DOXY_MED', ...
            'longName', 'Median value of uncalibrated phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(0), ...
            'validMax', single(15), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'MOLAR_DOXY'
         o_attributeStruct = struct('name', 'MOLAR_DOXY', ...
            'longName', 'Uncompensated (pressure and salinity) oxygen concentration reported by the oxygen sensor', ...
            'standardName', 'mole_concentration_of_dissolved_molecular_oxygen_in_sea_water', ...
            'fillValue', single(99999), ...
            'units', 'micromole/l', ...
            'validMin', single(0), ...
            'validMax', single(650), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'PHASE_DELAY_DOXY'
         o_attributeStruct = struct('name', 'PHASE_DELAY_DOXY', ...
            'longName', 'Phase delay reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'microsecond', ...
            'validMin', single(0), ...
            'validMax', single(99999), ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'MLPL_DOXY'
         o_attributeStruct = struct('name', 'MLPL_DOXY', ...
            'longName', 'Oxygen concentration reported by the oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'ml/l', ...
            'validMin', single(0), ...
            'validMax', single(650), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'NB_SAMPLE'
         o_attributeStruct = struct('name', 'NB_SAMPLE', ...
            'longName', 'Number of samples in bin', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'NB_SAMPLE_CTD'
         o_attributeStruct = struct('name', 'NB_SAMPLE_CTD', ...
            'longName', 'Number of samples in bin (from CTD sensor)', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'NB_SAMPLE_TRANSISTOR_PH'
         o_attributeStruct = struct('name', 'NB_SAMPLE_TRANSISTOR_PH', ...
            'longName', 'Number of samples in bin (from TRANSISTOR_PH sensor)', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RPHASE_DOXY'
         o_attributeStruct = struct('name', 'RPHASE_DOXY', ...
            'longName', 'Uncalibrated red phase shift reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', single(10), ...
            'validMax', single(70), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_COUNT_DOXY' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'TEMP_COUNT_DOXY', ...
            'longName', 'Count which is expressive of uncalibrated temperature value reported by oxygen sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%f', ...
            'fortranFormat', 'F', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'LED_FLASHING_COUNT_DOXY' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'LED_FLASHING_COUNT_DOXY', ...
            'longName', 'Number of times oxygen sensor flashing to measure oxygen', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%f', ...
            'fortranFormat', 'F', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'PPOX_DOXY'
         o_attributeStruct = struct('name', 'PPOX_DOXY', ...
            'longName', 'Partial pressure of oxygen', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'millibar', ...
            'validMin', single(-5), ...
            'validMax', single(5000), ...
            'axis', '', ...
            'cFormat', '%8.2f', ...
            'fortranFormat', 'F8.2', ...
            'resolution', single(0.01), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 1);
         
      case 'BETA_BACKSCATTERING470' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'BETA_BACKSCATTERING470', ...
            'longName', 'Total angle specific volume from backscattering sensor at 470 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BETA_BACKSCATTERING532'
         o_attributeStruct = struct('name', 'BETA_BACKSCATTERING532', ...
            'longName', 'Total angle specific volume from backscattering sensor at 532 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BETA_BACKSCATTERING532_STD'
         o_attributeStruct = struct('name', 'BETA_BACKSCATTERING532_STD', ...
            'longName', 'Standard deviation of total angle specific volume from backscattering sensor at 532 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BETA_BACKSCATTERING532_MED'
         o_attributeStruct = struct('name', 'BETA_BACKSCATTERING532_MED', ...
            'longName', 'Median value of total angle specific volume from backscattering sensor at 532 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BETA_BACKSCATTERING700'
         o_attributeStruct = struct('name', 'BETA_BACKSCATTERING700', ...
            'longName', 'Total angle specific volume from backscattering sensor at 700 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BETA_BACKSCATTERING700_STD'
         o_attributeStruct = struct('name', 'BETA_BACKSCATTERING700_STD', ...
            'longName', 'Standard deviation of total angle specific volume from backscattering sensor at 700 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BETA_BACKSCATTERING700_MED'
         o_attributeStruct = struct('name', 'BETA_BACKSCATTERING700_MED', ...
            'longName', 'Median value of total angle specific volume from backscattering sensor at 700 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'FLUORESCENCE_CHLA'
         o_attributeStruct = struct('name', 'FLUORESCENCE_CHLA', ...
            'longName', 'Chlorophyll-A signal from fluorescence sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FLUORESCENCE_CHLA_STD'
         o_attributeStruct = struct('name', 'FLUORESCENCE_CHLA_STD', ...
            'longName', 'Standard deviation of chlorophyll-A signal from fluorescence sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FLUORESCENCE_CHLA_MED'
         o_attributeStruct = struct('name', 'FLUORESCENCE_CHLA_MED', ...
            'longName', 'Median value of chlorophyll-A signal from fluorescence sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_CPU_CHLA'
         o_attributeStruct = struct('name', 'TEMP_CPU_CHLA', ...
            'longName', 'Thermistor signal from backscattering sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FLUORESCENCE_CDOM'
         o_attributeStruct = struct('name', 'FLUORESCENCE_CDOM', ...
            'longName', 'Raw fluorescence from coloured dissolved organic matter sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FLUORESCENCE_CDOM_STD'
         o_attributeStruct = struct('name', 'FLUORESCENCE_CDOM_STD', ...
            'longName', 'Standard deviation of raw fluorescence from coloured dissolved organic matter sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FLUORESCENCE_CDOM_MED'
         o_attributeStruct = struct('name', 'FLUORESCENCE_CDOM_MED', ...
            'longName', 'Median value of raw fluorescence from coloured dissolved organic matter sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         
         
      case 'FLUORESCENCE_VOLTAGE_CHLA' % for CYCLOPS of ARVOR CM
         o_attributeStruct = struct('name', 'FLUORESCENCE_VOLTAGE_CHLA', ...
            'longName', 'Chlorophyll-A signal from analogic fluorescence sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FLUORESCENCE_VOLTAGE_CHLA_STD' % for CYCLOPS of ARVOR CM
         o_attributeStruct = struct('name', 'FLUORESCENCE_VOLTAGE_CHLA_STD', ...
            'longName', 'Standard deviation of chlorophyll-A signal from analogic fluorescence sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FLUORESCENCE_VOLTAGE_CHLA_MED' % for CYCLOPS of ARVOR CM
         o_attributeStruct = struct('name', 'FLUORESCENCE_VOLTAGE_CHLA_MED', ...
            'longName', 'Median value of chlorophyll-A signal from analogic fluorescence sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'SIDE_SCATTERING_TURBIDITY'
         o_attributeStruct = struct('name', 'SIDE_SCATTERING_TURBIDITY', ...
            'longName', 'Turbidity signal from side scattering sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'SIDE_SCATTERING_TURBIDITY_STD'
         o_attributeStruct = struct('name', 'SIDE_SCATTERING_TURBIDITY_STD', ...
            'longName', 'Standard deviation of turbidity signal from side scattering sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'SIDE_SCATTERING_TURBIDITY_MED'
         o_attributeStruct = struct('name', 'SIDE_SCATTERING_TURBIDITY_MED', ...
            'longName', 'Median value of turbidity signal from side scattering sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'VOLTAGE_TURBIDITY' % for SEAPOINT of ARVOR CM
         o_attributeStruct = struct('name', 'VOLTAGE_TURBIDITY', ...
            'longName', 'Turbidity signal from side scattering analogic sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'VOLTAGE_TURBIDITY_STD' % for SEAPOINT of ARVOR CM
         o_attributeStruct = struct('name', 'VOLTAGE_TURBIDITY_STD', ...
            'longName', 'Standard deviation of turbidity signal from side scattering analogic sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'VOLTAGE_TURBIDITY_MED' % for SEAPOINT of ARVOR CM
         o_attributeStruct = struct('name', 'VOLTAGE_TURBIDITY_MED', ...
            'longName', 'Median value of turbidity signal from side scattering analogic sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);                

      case 'TRANSMITTANCE_PARTICLE_BEAM_ATTENUATION660' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'TRANSMITTANCE_PARTICLE_BEAM_ATTENUATION660', ...
            'longName', 'Beam attenuation from transmissometer sensor at 660 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'UV_INTENSITY_NITRATE'
         o_attributeStruct = struct('name', 'UV_INTENSITY_NITRATE', ...
            'longName', 'Intensity of ultra violet flux from nitrate sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'UV_INTENSITY_DARK_NITRATE'
         o_attributeStruct = struct('name', 'UV_INTENSITY_DARK_NITRATE', ...
            'longName', 'Intensity of ultra violet flux dark measurement from nitrate sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'UV_INTENSITY_DARK_NITRATE_STD'
         o_attributeStruct = struct('name', 'UV_INTENSITY_DARK_NITRATE_STD', ...
            'longName', 'Standard deviation of intensity of ultra violet flux dark measurement from nitrate sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'UV_INTENSITY_DARK_SEAWATER_NITRATE'
         o_attributeStruct = struct('name', 'UV_INTENSITY_DARK_SEAWATER_NITRATE', ...
            'longName', 'Intensity of ultra-violet flux dark sea water from nitrate sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         
         
      case 'MOLAR_NITRATE'
         o_attributeStruct = struct('name', 'MOLAR_NITRATE', ...
            'longName', 'Nitrate', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'micromole/l', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'FIT_ERROR_NITRATE'
         o_attributeStruct = struct('name', 'FIT_ERROR_NITRATE', ...
            'longName', 'Nitrate fit error', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'TEMP_NITRATE'
         o_attributeStruct = struct('name', 'TEMP_NITRATE', ...
            'longName', 'Internal temperature of the SUNA sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'TEMP_SPECTROPHOTOMETER_NITRATE'
         o_attributeStruct = struct('name', 'TEMP_SPECTROPHOTOMETER_NITRATE', ...
            'longName', 'Temperature of the spectrometer', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'HUMIDITY_NITRATE'
         o_attributeStruct = struct('name', 'HUMIDITY_NITRATE', ...
            'longName', 'Relative humidity inside the SUNA sensor (If > 50% There is a leak)', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'percent', ...
            'validMin', single(0), ...
            'validMax', single(100), ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'VRS_PH'
         o_attributeStruct = struct('name', 'VRS_PH', ...
            'longName', 'Voltage difference between reference and source from pH sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.6f', ...
            'fortranFormat', 'F.6', ...
            'resolution', single(0.000001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'TEMP_PH' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'TEMP_PH', ...
            'longName', 'Sea temperature from pH sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree_Celsius', ...
            'validMin', single(-2.5), ...
            'validMax', single(40), ...
            'axis', '', ...
            'cFormat', '%9.3f', ...
            'fortranFormat', 'F9.3', ...
            'resolution', single(0.001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'IB_PH'
         o_attributeStruct = struct('name', 'IB_PH', ...
            'longName', 'Base current of pH sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'nanoampere', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.4f', ...
            'fortranFormat', 'F.4', ...
            'resolution', single(0.0001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'VK_PH'
         o_attributeStruct = struct('name', 'VK_PH', ...
            'longName', 'Counter electrode voltage of pH sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.5f', ...
            'fortranFormat', 'F.5', ...
            'resolution', single(0.00001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'IK_PH'
         o_attributeStruct = struct('name', 'IK_PH', ...
            'longName', 'Counter electrode current of pH sensor', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'nanoampere', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.4f', ...
            'fortranFormat', 'F.4', ...
            'resolution', single(0.0001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'PH_IN_SITU_FREE'
         o_attributeStruct = struct('name', 'PH_IN_SITU_FREE', ...
            'longName', 'pH', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.4f', ...
            'fortranFormat', 'F.4', ...
            'resolution', single(0.0001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'PH_IN_SITU_SEAWATER'
         o_attributeStruct = struct('name', 'PH_IN_SITU_SEAWATER', ...
            'longName', 'pH', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.4f', ...
            'fortranFormat', 'F.4', ...
            'resolution', single(0.0001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE380'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE380', ...
            'longName', 'Raw downwelling irradiance at 380 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE380_STD'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE380_STD', ...
            'longName', 'Standard deviation of raw downwelling irradiance at 380 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE380_MED'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE380_MED', ...
            'longName', 'Median value of raw downwelling irradiance at 380 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE412'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE412', ...
            'longName', 'Raw downwelling irradiance at 412 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE412_STD'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE412_STD', ...
            'longName', 'Standard deviation of raw downwelling irradiance at 412 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE412_MED'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE412_MED', ...
            'longName', 'Median value of raw downwelling irradiance at 412 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE443' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE443', ...
            'longName', 'Raw downwelling irradiance at 443 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         

      case 'RAW_DOWNWELLING_IRRADIANCE490'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE490', ...
            'longName', 'Raw downwelling irradiance at 490 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE490_STD'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE490_STD', ...
            'longName', 'Standard deviation of raw downwelling irradiance at 490 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE490_MED'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE490_MED', ...
            'longName', 'Median value of raw downwelling irradiance at 490 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_IRRADIANCE555' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_IRRADIANCE555', ...
            'longName', 'Raw downwelling irradiance at 555 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         
         
      case 'RAW_UPWELLING_RADIANCE412' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'RAW_UPWELLING_RADIANCE412', ...
            'longName', 'Raw upwelling radiance at 412 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         

      case 'RAW_UPWELLING_RADIANCE443' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'RAW_UPWELLING_RADIANCE443', ...
            'longName', 'Raw upwelling radiance at 443 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         

      case 'RAW_UPWELLING_RADIANCE490' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'RAW_UPWELLING_RADIANCE490', ...
            'longName', 'Raw upwelling radiance at 490 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         

      case 'RAW_UPWELLING_RADIANCE555' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'RAW_UPWELLING_RADIANCE555', ...
            'longName', 'Raw upwelling radiance at 555 nanometers', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         

      case 'RAW_DOWNWELLING_PAR'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_PAR', ...
            'longName', 'Raw downwelling photosynthetic available radiation', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_PAR_STD'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_PAR_STD', ...
            'longName', 'Standard deviation of raw downwelling photosynthetic available radiation', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'RAW_DOWNWELLING_PAR_MED'
         o_attributeStruct = struct('name', 'RAW_DOWNWELLING_PAR_MED', ...
            'longName', 'Median value of raw downwelling photosynthetic available radiation', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%9.1f', ...
            'fortranFormat', 'F9.1', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'TILT' % for nc_create_synthetic_profile
         o_attributeStruct = struct('name', 'TILT', ...
            'longName', 'Inclination of the float axis in respect to the local vertical', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'degree', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.1f', ...
            'fortranFormat', 'F.1', ...
            'resolution', single(0.1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'MTIME'
         o_attributeStruct = struct('name', 'MTIME', ...
            'longName', 'Fractional day of the individual measurement relative to JULD of the station', ...
            'standardName', '', ...
            'fillValue', double(999999), ...
            'units', 'days', ...
            'validMin', double(-3), ...
            'validMax', double(3), ...
            'axis', '', ...
            'cFormat', '%.6f', ...
            'fortranFormat', 'F.6', ...
            'resolution', single(0.000001), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);
         
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         % TEMPORARY PARAMETERS
         
      case 'JULD_LEVEL' % for nc_create_merged_profile
         o_attributeStruct = struct('name', 'JULD_LEVEL', ...
            'longName', 'Julian day (UTC) of each profile level measurement relative to REFERENCE_DATE_TIME', ...
            'standardName', 'time', ...
            'units', 'days since 1950-01-01 00:00:00 UTC', ...
            'conventions', 'Relative julian days with decimal part (as parts of day)', ...
            'fillValue', double(999999), ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '', ...
            'fortranFormat', '', ...
            'resolution', '', ...
            'paramType', '', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 1);

         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         % TEMPORARY PARAMETERS
                  
      case 'VALVE_ACTION_FLAG' % for TECH_AUX
         o_attributeStruct = struct('name', 'VALVE_ACTION_FLAG', ...
            'longName', 'Valve action flag', ...
            'standardName', '', ...
            'fillValue', int32(-1), ...
            'units', 'boolean', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', int32(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_INT', ...
            'adjAllowed', 0);
         
      case 'PUMP_ACTION_FLAG' % for TECH_AUX
         o_attributeStruct = struct('name', 'PUMP_ACTION_FLAG', ...
            'longName', 'Pump action flag', ...
            'standardName', '', ...
            'fillValue', int32(-1), ...
            'units', 'boolean', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', int32(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_INT', ...
            'adjAllowed', 0);
         
      case 'VALVE_ACTION_DURATION' % for TECH_AUX
         o_attributeStruct = struct('name', 'VALVE_ACTION_DURATION', ...
            'longName', 'Duration of valve action', ...
            'standardName', '', ...
            'fillValue', single(-1), ...
            'units', 'csec', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%f', ...
            'fortranFormat', 'F', ...
            'resolution', single(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'PUMP_ACTION_DURATION' % for TECH_AUX
         o_attributeStruct = struct('name', 'PUMP_ACTION_DURATION', ...
            'longName', 'Duration of pump action', ...
            'standardName', '', ...
            'fillValue', single(-1), ...
            'units', 'csec', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%f', ...
            'fortranFormat', 'F', ...
            'resolution', single(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'AIR_BLADDER_PRESSURE_DBAR' % for TECH_AUX
         o_attributeStruct = struct('name', 'AIR_BLADDER_PRESSURE_DBAR', ...
            'longName', 'Air bladder pressure', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'decibar', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'AIR_BLADDER_PRESSURE_COUNT' % for TECH_AUX
         o_attributeStruct = struct('name', 'AIR_BLADDER_PRESSURE_COUNT', ...
            'longName', 'Air bladder pressure', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'BATTERY_VOLTAGE_VOLT' % for TECH_AUX
         o_attributeStruct = struct('name', 'BATTERY_VOLTAGE_VOLT', ...
            'longName', 'Battery voltage', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BATTERY_VOLTAGE_COUNT' % for TECH_AUX
         o_attributeStruct = struct('name', 'BATTERY_VOLTAGE_COUNT', ...
            'longName', 'Battery voltage', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         
         
      case 'HUMIDITY_PERCENT_RELATIVE' % for TECH_AUX
         o_attributeStruct = struct('name', 'HUMIDITY_PERCENT_RELATIVE', ...
            'longName', 'Humidity', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'percent relative', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'LEAK_DETECT_VOLTAGE_VOLT' % for TECH_AUX
         o_attributeStruct = struct('name', 'LEAK_DETECT_VOLTAGE_VOLT', ...
            'longName', 'Leak detect voltage', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'volt', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'INTERNAL_VACUUM_PRESSURE_DBAR' % for TECH_AUX
         o_attributeStruct = struct('name', 'INTERNAL_VACUUM_PRESSURE_DBAR', ...
            'longName', 'Internal vacuum pressure', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'decibar', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'INTERNAL_VACUUM_PRESSURE_COUNT' % for TECH_AUX
         o_attributeStruct = struct('name', 'INTERNAL_VACUUM_PRESSURE_COUNT', ...
            'longName', 'Internal vacuum pressure', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'COULOMB_COUNTER_AMPERE_HOUR' % for TECH_AUX
         o_attributeStruct = struct('name', 'COULOMB_COUNTER_AMPERE_HOUR', ...
            'longName', 'Coulomb counter', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'ampere_hour', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'BATTERY_CURRENT_DRAW_MILLI_AMPERE' % for TECH_AUX
         o_attributeStruct = struct('name', 'BATTERY_CURRENT_DRAW_MILLI_AMPERE', ...
            'longName', 'Battery current draw', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'milliampere', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'BATTERY_CURRENT_RAW_MILLI_AMPERE' % for TECH_AUX
         o_attributeStruct = struct('name', 'BATTERY_CURRENT_RAW_MILLI_AMPERE', ...
            'longName', 'Battery current raw', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'milliampere', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      case 'FIRMWARE_WATCHDOG_COUNT' % for TECH_AUX
         o_attributeStruct = struct('name', 'FIRMWARE_WATCHDOG_COUNT', ...
            'longName', 'Number of registered watchdog events', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
         
      case 'SURFACE_PRESSURE_DBAR' % for TECH_AUX
         o_attributeStruct = struct('name', 'SURFACE_PRESSURE_DBAR', ...
            'longName', 'Surface pressure measurement sampled during Argos transmission and updated at each new Argos block message', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'decibar', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.3f', ...
            'fortranFormat', 'F.3', ...
            'resolution', single(0.001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);         

         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         % TEMPORARY PARAMETERS

      case 'BLADDER_INFLATED_FLAG' % for TRAJ_AUX
         o_attributeStruct = struct('name', 'BLADDER_INFLATED_FLAG', ...
            'longName', 'Sample while bladder is inflated flag', ...
            'standardName', '', ...
            'fillValue', int32(-1), ...
            'units', 'boolean', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', int32(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_INT', ...
            'adjAllowed', 0);
         
      case 'GPS_TIME_TO_FIX' % for TRAJ_AUX
         o_attributeStruct = struct('name', 'GPS_TIME_TO_FIX', ...
            'longName', 'Number of seconds required to obtain the GPS fix', ...
            'standardName', '', ...
            'fillValue', int32(-1), ...
            'units', 'second', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', int32(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_INT', ...
            'adjAllowed', 0);
         
      case 'GPS_NB_SATELLITE' % for TRAJ_AUX
         o_attributeStruct = struct('name', 'GPS_NB_SATELLITE', ...
            'longName', 'Number of GPS satellites seen by the float', ...
            'standardName', '', ...
            'fillValue', int32(-1), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', int32(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_INT', ...
            'adjAllowed', 0);

      case 'RAFOS_STATUS' % for TRAJ_AUX
         o_attributeStruct = struct('name', 'RAFOS_STATUS', ...
            'longName', 'Status of RAFOS dataset (2: ok; 4: overlap error; 8: on @ end error; 16: communication error)', ...
            'standardName', '', ...
            'fillValue', int32(-1), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', int32(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_INT', ...
            'adjAllowed', 0);
         
      case 'COR' % for TRAJ_AUX
         o_attributeStruct = struct('name', 'COR', ...
            'longName', 'RAFOS correlation height', ...
            'standardName', '', ...
            'fillValue', int32(-1), ...
            'units', 'dimensionless', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', int32(1), ...
            'paramType', 't', ...
            'paramNcType', 'NC_INT', ...
            'adjAllowed', 0);
         
      case 'TOA' % for TRAJ_AUX
         o_attributeStruct = struct('name', 'TOA', ...
            'longName', 'RAFOS Time Of Arrival', ...
            'standardName', '', ...
            'fillValue', double(-1), ...
            'units', '', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.5f', ...
            'fortranFormat', 'F.5', ...
            'resolution', single(0.00001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);
         
      case 'LIGHT442' % TEMPO
         o_attributeStruct = struct('name', 'LIGHT442', ...
            'longName', '', ...
            'standardName', '', ...
            'fillValue', double(-1), ...
            'units', '', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.5f', ...
            'fortranFormat', 'F.5', ...
            'resolution', single(0.00001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);
         
      case 'LIGHT550' % TEMPO
         o_attributeStruct = struct('name', 'LIGHT550', ...
            'longName', '', ...
            'standardName', '', ...
            'fillValue', double(-1), ...
            'units', '', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.5f', ...
            'fortranFormat', 'F.5', ...
            'resolution', single(0.00001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);
         
      case 'LIGHT676' % TEMPO
         o_attributeStruct = struct('name', 'LIGHT676', ...
            'longName', '', ...
            'standardName', '', ...
            'fillValue', double(-1), ...
            'units', '', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%.5f', ...
            'fortranFormat', 'F.5', ...
            'resolution', single(0.00001), ...
            'paramType', 't', ...
            'paramNcType', 'NC_DOUBLE', ...
            'adjAllowed', 0);

         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         % TEMPORARY PARAMETERS
         
      case 'BLUE_REF' % for PROF_AUX
         o_attributeStruct = struct('name', 'BLUE_REF', ...
            'longName', 'BlueRef from 082807 Apex floats (unknow parameter)', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);
                  
      case 'NTU_REF' % for PROF_AUX
         o_attributeStruct = struct('name', 'NTU_REF', ...
            'longName', 'NtuRef from 082807 Apex floats (unknow parameter)', ...
            'standardName', '', ...
            'fillValue', single(99999), ...
            'units', 'count', ...
            'validMin', '', ...
            'validMax', '', ...
            'axis', '', ...
            'cFormat', '%d', ...
            'fortranFormat', 'I', ...
            'resolution', single(1), ...
            'paramType', 'i', ...
            'paramNcType', 'NC_FLOAT', ...
            'adjAllowed', 0);

      otherwise
         
         if (again == 1)
            % names like <PARAM>2 or <PARAM>_2
            if (isletter(a_paramName(end-1)) && ~isletter(a_paramName(end)))
               % <PARAM>2
               paramName = a_paramName(1:end-1);
            elseif ((a_paramName(end-1) == '_') && ~isletter(a_paramName(end)))
               % <PARAM>_2
               paramName = a_paramName(1:end-2);
            end
            again = 2;
         elseif (again == 2)
            % names like <PARAM>2_STD or <PARAM>_2_STD or <PARAM>2_MED or
            % <PARAM>_2_MED
            if ((length(a_paramName) > 4) && ...
                  (strcmp(a_paramName(end-3:end), '_STD') || strcmp(a_paramName(end-3:end), '_MED')))
               if (isletter(a_paramName(end-5)) && ~isletter(a_paramName(end-4)))
                  % <PARAM>2_STD or <PARAM>2_MED
                  paramName = a_paramName(1:end-5);
               elseif ((a_paramName(end-5) == '_') && ~isletter(a_paramName(end-4)))
                  paramName = a_paramName(1:end-6);
               end
            end
            again = 3;
         else
            % don't print any WARNING for b parameter like <PARAM>_STD or
            % <PARAM>_MED
            paramName = '';
            if (~isempty(strfind(a_paramName, '_STD')))
               pos = strfind(a_paramName, '_STD');
               paramName = a_paramName(1:pos-1);
            elseif (~isempty(strfind(a_paramName, '_MED')))
               pos = strfind(a_paramName, '_MED');
               paramName = a_paramName(1:pos-1);
            end
            
            printWarning = 1;
            if (~isempty(paramName))
               [attStruct] = get_netcdf_param_attributes_3_1(paramName);
               if (attStruct.paramType == 'b')
                  printWarning = 0;
               end
            end
            
            if (printWarning == 1)
               fprintf('WARNING: Attribute list no yet defined for parameter %s\n', a_paramName);
            end
            
            again = 0;
         end
   end
   if (~isempty(o_attributeStruct))
      if ((again == 2) || (again == 3))
         o_attributeStruct.name = a_paramName;
      end
      again = 0;
   end
end

return
