% ------------------------------------------------------------------------------
% Print parameter message data in output CSV file.
%
% SYNTAX :
%  print_float_prog_param_in_csv_file_210(a_floatParam)
%
% INPUT PARAMETERS :
%   a_floatParam : parameter message data
%
% OUTPUT PARAMETERS :
%
% EXAMPLES :
%
% SEE ALSO :
% AUTHORS  : Jean-Philippe Rannou (Altran)(jean-philippe.rannou@altran.com)
% ------------------------------------------------------------------------------
% RELEASES :
%   07/04/2016 - RNU - creation
% ------------------------------------------------------------------------------
function print_float_prog_param_in_csv_file_210(a_floatParam)

% current float WMO number
global g_decArgo_floatNum;

% current cycle number
global g_decArgo_cycleNum;

% output CSV file Id
global g_decArgo_outputCsvFileId;


if (isempty(a_floatParam))
   return;
end

ID_OFFSET = 1;

if (size(a_floatParam, 1) > 1)
   fprintf('ERROR: Float #%d cycle #%d: BUFFER anomaly (%d param messages in the buffer)\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, ...
      size(a_floatParam, 1));
elseif (size(a_floatParam, 1) == 1)
   id = 1;
   
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; PARAMETERS PACKET (#%d)\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), id);
   
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Transmission time of parameters packet; %s\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), julian_2_gregorian_dec_argo(a_floatParam(id, end)));
   
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; PARAM: MISCELLANEOUS\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Cycle number; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 1+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Iridium session indicator (0=first session, 1=second session); %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 2+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Float time hour; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 3+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Float time minute; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 4+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Float time second; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 5+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Float time gregorian day; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 6+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Float time gregorian month; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 7+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Float time gregorian year; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 8+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; => Float time; %s\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), julian_2_gregorian_dec_argo(a_floatParam(id, end-1)));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; Float serial number; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 9+ID_OFFSET));
   
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; PARAM: MISSION PARAMETERS\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC0: Total number of cycles; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 10+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC1: Number of cycles with cycle duration #1; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 11+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC2: Cycle duration #1; %d; hours\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 12+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC3: Cycle duration #2; %d; hours\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 13+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC4: Float reference day; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 14+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC5: Expected surface time (hour); %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 15+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC6: Delay before mission; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 16+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC7: CTD sensor acquisition mode; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 17+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC8: Descent to park sampling time; %d; seconds\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 18+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC9: Drift at park sampling time; %d; hours\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 19+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC10: Ascent sampling time; %d; seconds\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 20+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC11: Park pressure for the MC1 first cycles; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 21+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC12: Profile pressure for the MC1 first cycles; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 22+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC13: Park pressure after the MC1 first cycles; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 23+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC14: Profile pressure after the MC1 first cycles; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 24+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC15: Second profile pressure repetition rate (not used if = 1); %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 25+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC16: Second profile pressure; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 26+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC17: Threshold for shallow to intermediate depth zone; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 27+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC18: Threshold for intermediate to deep depth zone; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 28+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC19: Slice thickness in surface depth zone; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 29+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC20: Slice thickness in intermediate depth zone; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 30+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC21: Slice thickness in deep depth zone; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 31+ID_OFFSET));   
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC22: Iridium EOL transmission period; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 32+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC23: Iridium second session waiting time; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 33+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC24: Grounding mode (1=stay grounded, 0=pressure switch); %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 34+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC25: Grounding switch pressure adjustment; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 35+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC26: Delay after grounding at surface; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 36+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC27: Optode type; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 37+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC28: CTD pump cut-off pressure; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 38+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC29: In air acquisition periodicity; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 39+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC30: In air acquisition sampling time; %d; seconds\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 40+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; MC31: In air acquisition phase duration; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 41+ID_OFFSET));
   
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; PARAM: TECHNICAL PARAMETERS\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC0: EV max duration on surface; %d; csec\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 42+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC1: EV max volume during descent and repositioning; %d; cm3\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 43+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC2: Pump max duration during repositioning; %d; csec\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 44+ID_OFFSET)*10);
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC3: Pump max duration during ascent; %d; csec\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 45+ID_OFFSET)*10);
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC4: Pump duration during buoyancy acquisition; %d;csec\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 46+ID_OFFSET)*1000);
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC5: Pressure target tolerance for stabilization; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 47+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC6: Max pressure before emergency ascent; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 48+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC7: Buoyancy reduction first threshold; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 49+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC8: Buoyancy reduction second threshold; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 50+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC9: Number of out of tolerance pressures before repositioning; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 51+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC10: Min oil volume for grounding detection; %d; cm3\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 52+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC11: Min pressure threshold to switch pressure (in grounding mode 0); %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 53+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC12: Pressure target tolerance during drift; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 54+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC13: Average descent speed; %d; mm/s\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 55+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC14: Park pressure increment between cycles; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 56+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC15: End of ascent pressure; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 57+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC16: Average ascent speed; %d; mm/s\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 58+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC17: Pressure check period during ascent; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 59+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC18: Min vertical displacement to detect a stabilization during ascent; %d; dbar\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 60+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC19: GPS session duration time-out; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 61+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC20: Hydraulic packets transmission flag; %d\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 62+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC21: Delay befor reset-offset command; %d; minutes\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 63+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC22: Pump duration during buoyancy acquisition for in air; %d; csec\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 64+ID_OFFSET)*1000);
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC23: Internal pressure calibration coeficient #1; %.3f\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 65+ID_OFFSET));
   fprintf(g_decArgo_outputCsvFileId, '%d; %d; Prog_%d; TC24: Internal pressure calibration coeficient #2; %f\n', ...
      g_decArgo_floatNum, g_decArgo_cycleNum, a_floatParam(id, 2+ID_OFFSET), a_floatParam(id, 66+ID_OFFSET));
end

return;
